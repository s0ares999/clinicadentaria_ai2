{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s0ares\\\\clinicadentaria_ai2\\\\client\\\\src\\\\views\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport AuthService from '../services/auth.service';\nimport axios from 'axios';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n_c = PageContainer;\nconst MainContent = styled.main`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2rem;\n  background-color: #f8f9fa;\n`;\n_c2 = MainContent;\nconst RegisterCard = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  padding: 2.5rem;\n  width: 100%;\n  max-width: 600px;\n`;\n_c3 = RegisterCard;\nconst CardTitle = styled.h2`\n  font-size: 2rem;\n  margin-bottom: 1.5rem;\n  color: #2c3e50;\n  text-align: center;\n`;\n_c4 = CardTitle;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n_c5 = Form;\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c6 = FormGroup;\nconst FormRow = styled.div`\n  display: flex;\n  gap: 1rem;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n  \n  > div {\n    flex: 1;\n  }\n`;\n_c7 = FormRow;\nconst Label = styled.label`\n  margin-bottom: 0.5rem;\n  color: #2c3e50;\n  font-weight: 500;\n`;\n_c8 = Label;\nconst Input = styled.input`\n  padding: 0.75rem;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  font-size: 1rem;\n  transition: border-color 0.3s;\n\n  &:focus {\n    border-color: #3498db;\n    outline: none;\n  }\n`;\n_c9 = Input;\nconst Select = styled.select`\n  padding: 0.75rem;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  font-size: 1rem;\n  transition: border-color 0.3s;\n\n  &:focus {\n    border-color: #3498db;\n    outline: none;\n  }\n`;\n_c10 = Select;\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-top: 0.5rem;\n\n  &:disabled {\n    background-color: #9cb3c9;\n    cursor: not-allowed;\n  }\n\n  &:not(:disabled):hover {\n    background-color: #2980b9;\n  }\n`;\n_c11 = Button;\nconst AlertMessage = styled.div`\n  padding: 0.75rem;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n\n  &.success {\n    background-color: #d4edda;\n    color: #155724;\n  }\n\n  &.error {\n    background-color: #f8d7da;\n    color: #721c24;\n  }\n`;\n_c12 = AlertMessage;\nconst LoginLink = styled.p`\n  text-align: center;\n  margin-top: 1.5rem;\n  color: #7f8c8d;\n\n  a {\n    color: #3498db;\n    text-decoration: none;\n    font-weight: 500;\n    transition: color 0.3s;\n\n    &:hover {\n      color: #2980b9;\n      text-decoration: underline;\n    }\n  }\n`;\n_c13 = LoginLink;\nconst RoleSelector = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n_c14 = RoleSelector;\nconst RoleButton = styled.button`\n  flex: 1;\n  padding: 1rem;\n  background-color: ${props => props.active ? '#3498db' : '#f8f9fa'};\n  color: ${props => props.active ? 'white' : '#2c3e50'};\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s;\n\n  &:hover {\n    background-color: ${props => props.active ? '#2980b9' : '#e0e0e0'};\n  }\n`;\n_c15 = RoleButton;\nfunction RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [nome, setNome] = useState('');\n  const [telefone, setTelefone] = useState('');\n  const [role, setRole] = useState('cliente');\n\n  // Campos específicos para cliente\n  const [dataNascimento, setDataNascimento] = useState('');\n  const [nif, setNif] = useState('');\n  const [morada, setMorada] = useState('');\n\n  // Campos específicos para médico\n  const [especialidade_id, setEspecialidadeId] = useState('');\n  const [crm, setCrm] = useState('');\n  const [especialidades, setEspecialidades] = useState([]);\n\n  // Campos específicos para admin\n  const [nivelAcesso, setNivelAcesso] = useState('geral');\n  const [message, setMessage] = useState('');\n  const [successful, setSuccessful] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Carregar especialidades se o usuário selecionar o papel de médico\n    if (role === 'medico') {\n      const fetchEspecialidades = async () => {\n        try {\n          const response = await axios.get('http://localhost:8000/api/especialidades');\n          setEspecialidades(response.data);\n        } catch (error) {\n          console.error('Erro ao carregar especialidades:', error);\n          setEspecialidades([{\n            id: 1,\n            nome: 'Ortodontia'\n          }, {\n            id: 2,\n            nome: 'Endodontia'\n          }, {\n            id: 3,\n            nome: 'Periodontia'\n          }, {\n            id: 4,\n            nome: 'Implantodontia'\n          }, {\n            id: 5,\n            nome: 'Odontopediatria'\n          }]);\n        }\n      };\n      fetchEspecialidades();\n    }\n  }, [role]);\n  const handleRegister = async e => {\n    e.preventDefault();\n    setMessage('');\n    setSuccessful(false);\n    setLoading(true);\n    try {\n      console.log(\"Iniciando registro...\");\n\n      // Preparar dados específicos com base no papel selecionado\n      let dadosEspecificos = {};\n      if (role === 'cliente') {\n        dadosEspecificos = {};\n      } else if (role === 'medico') {\n        dadosEspecificos = {\n          especialidade_id: parseInt(especialidade_id),\n          crm: crm\n        };\n      } else if (role === 'admin') {\n        dadosEspecificos = {\n          nivel_acesso: nivelAcesso\n        };\n      }\n      console.log(\"Enviando dados:\", {\n        email,\n        senha: password,\n        nome,\n        telefone,\n        tipo: role,\n        ...dadosEspecificos\n      });\n      const response = await AuthService.register(email, password, nome, telefone, role, dadosEspecificos);\n      console.log(\"Resposta recebida:\", response);\n      setMessage(response.data.message);\n      setSuccessful(true);\n\n      // Redirecionar para login após registro bem-sucedido\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    } catch (error) {\n      console.error(\"Erro no registro:\", error);\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setMessage(resMessage);\n      setSuccessful(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: /*#__PURE__*/_jsxDEV(RegisterCard, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: \"Criar Conta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(AlertMessage, {\n          className: successful ? 'success' : 'error',\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleRegister,\n          children: [/*#__PURE__*/_jsxDEV(RoleSelector, {\n            children: [/*#__PURE__*/_jsxDEV(RoleButton, {\n              type: \"button\",\n              active: role === 'cliente',\n              onClick: () => setRole('cliente'),\n              children: \"Cliente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RoleButton, {\n              type: \"button\",\n              active: role === 'medico',\n              onClick: () => setRole('medico'),\n              children: \"M\\xE9dico\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RoleButton, {\n              type: \"button\",\n              active: role === 'admin',\n              onClick: () => setRole('admin'),\n              children: \"Administrador\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"username\",\n                children: \"Nome de Utilizador\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"username\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                id: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"password\",\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"nome\",\n              children: \"Nome Completo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"nome\",\n              value: nome,\n              onChange: e => setNome(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"telefone\",\n              children: \"Telefone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"tel\",\n              id: \"telefone\",\n              value: telefone,\n              onChange: e => setTelefone(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), role === 'cliente' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FormRow, {\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"dataNascimento\",\n                  children: \"Data de Nascimento\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"date\",\n                  id: \"dataNascimento\",\n                  value: dataNascimento,\n                  onChange: e => setDataNascimento(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"nif\",\n                  children: \"NIF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  id: \"nif\",\n                  value: nif,\n                  onChange: e => setNif(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"morada\",\n                children: \"Morada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"morada\",\n                value: morada,\n                onChange: e => setMorada(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), role === 'medico' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"especialidade\",\n                children: \"Especialidade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                id: \"especialidade\",\n                value: especialidade_id,\n                onChange: e => setEspecialidadeId(e.target.value),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Selecione uma especialidade\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this), especialidades.map(esp => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: esp.id,\n                  children: esp.nome\n                }, esp.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"crm\",\n                children: \"CRM (C\\xE9dula Profissional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"crm\",\n                value: crm,\n                onChange: e => setCrm(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), role === 'admin' && /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"nivelAcesso\",\n              children: \"N\\xEDvel de Acesso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              id: \"nivelAcesso\",\n              value: nivelAcesso,\n              onChange: e => setNivelAcesso(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"geral\",\n                children: \"Geral\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"total\",\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"restrito\",\n                children: \"Restrito\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? 'A processar...' : 'Registar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoginLink, {\n            children: [\"J\\xE1 tem uma conta? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Fa\\xE7a login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"PLZIrPRHvpGbdIRSU4pKpG1eA/k=\", false, function () {\n  return [useNavigate];\n});\n_c16 = RegisterPage;\nexport default RegisterPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"RegisterCard\");\n$RefreshReg$(_c4, \"CardTitle\");\n$RefreshReg$(_c5, \"Form\");\n$RefreshReg$(_c6, \"FormGroup\");\n$RefreshReg$(_c7, \"FormRow\");\n$RefreshReg$(_c8, \"Label\");\n$RefreshReg$(_c9, \"Input\");\n$RefreshReg$(_c10, \"Select\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"AlertMessage\");\n$RefreshReg$(_c13, \"LoginLink\");\n$RefreshReg$(_c14, \"RoleSelector\");\n$RefreshReg$(_c15, \"RoleButton\");\n$RefreshReg$(_c16, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","styled","AuthService","axios","Navbar","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","PageContainer","div","_c","MainContent","main","_c2","RegisterCard","_c3","CardTitle","h2","_c4","Form","form","_c5","FormGroup","_c6","FormRow","_c7","Label","label","_c8","Input","input","_c9","Select","select","_c10","Button","button","_c11","AlertMessage","_c12","LoginLink","p","_c13","RoleSelector","_c14","RoleButton","props","active","_c15","RegisterPage","_s","username","setUsername","email","setEmail","password","setPassword","nome","setNome","telefone","setTelefone","role","setRole","dataNascimento","setDataNascimento","nif","setNif","morada","setMorada","especialidade_id","setEspecialidadeId","crm","setCrm","especialidades","setEspecialidades","nivelAcesso","setNivelAcesso","message","setMessage","successful","setSuccessful","loading","setLoading","navigate","fetchEspecialidades","response","get","data","error","console","id","handleRegister","e","preventDefault","log","dadosEspecificos","parseInt","nivel_acesso","senha","tipo","register","setTimeout","resMessage","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","onClick","htmlFor","value","onChange","target","required","map","esp","disabled","to","_c16","$RefreshReg$"],"sources":["C:/Users/s0ares/clinicadentaria_ai2/client/src/views/RegisterPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport AuthService from '../services/auth.service';\nimport axios from 'axios';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MainContent = styled.main`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2rem;\n  background-color: #f8f9fa;\n`;\n\nconst RegisterCard = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  padding: 2.5rem;\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst CardTitle = styled.h2`\n  font-size: 2rem;\n  margin-bottom: 1.5rem;\n  color: #2c3e50;\n  text-align: center;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FormRow = styled.div`\n  display: flex;\n  gap: 1rem;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n  \n  > div {\n    flex: 1;\n  }\n`;\n\nconst Label = styled.label`\n  margin-bottom: 0.5rem;\n  color: #2c3e50;\n  font-weight: 500;\n`;\n\nconst Input = styled.input`\n  padding: 0.75rem;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  font-size: 1rem;\n  transition: border-color 0.3s;\n\n  &:focus {\n    border-color: #3498db;\n    outline: none;\n  }\n`;\n\nconst Select = styled.select`\n  padding: 0.75rem;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  font-size: 1rem;\n  transition: border-color 0.3s;\n\n  &:focus {\n    border-color: #3498db;\n    outline: none;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-top: 0.5rem;\n\n  &:disabled {\n    background-color: #9cb3c9;\n    cursor: not-allowed;\n  }\n\n  &:not(:disabled):hover {\n    background-color: #2980b9;\n  }\n`;\n\nconst AlertMessage = styled.div`\n  padding: 0.75rem;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n\n  &.success {\n    background-color: #d4edda;\n    color: #155724;\n  }\n\n  &.error {\n    background-color: #f8d7da;\n    color: #721c24;\n  }\n`;\n\nconst LoginLink = styled.p`\n  text-align: center;\n  margin-top: 1.5rem;\n  color: #7f8c8d;\n\n  a {\n    color: #3498db;\n    text-decoration: none;\n    font-weight: 500;\n    transition: color 0.3s;\n\n    &:hover {\n      color: #2980b9;\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst RoleSelector = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst RoleButton = styled.button`\n  flex: 1;\n  padding: 1rem;\n  background-color: ${props => props.active ? '#3498db' : '#f8f9fa'};\n  color: ${props => props.active ? 'white' : '#2c3e50'};\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s;\n\n  &:hover {\n    background-color: ${props => props.active ? '#2980b9' : '#e0e0e0'};\n  }\n`;\n\nfunction RegisterPage() {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [nome, setNome] = useState('');\n  const [telefone, setTelefone] = useState('');\n  const [role, setRole] = useState('cliente');\n  \n  // Campos específicos para cliente\n  const [dataNascimento, setDataNascimento] = useState('');\n  const [nif, setNif] = useState('');\n  const [morada, setMorada] = useState('');\n  \n  // Campos específicos para médico\n  const [especialidade_id, setEspecialidadeId] = useState('');\n  const [crm, setCrm] = useState('');\n  const [especialidades, setEspecialidades] = useState([]);\n  \n  // Campos específicos para admin\n  const [nivelAcesso, setNivelAcesso] = useState('geral');\n  \n  const [message, setMessage] = useState('');\n  const [successful, setSuccessful] = useState(false);\n  const [loading, setLoading] = useState(false);\n  \n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    // Carregar especialidades se o usuário selecionar o papel de médico\n    if (role === 'medico') {\n      const fetchEspecialidades = async () => {\n        try {\n          const response = await axios.get('http://localhost:8000/api/especialidades');\n          setEspecialidades(response.data);\n        } catch (error) {\n          console.error('Erro ao carregar especialidades:', error);\n          setEspecialidades([\n            { id: 1, nome: 'Ortodontia' },\n            { id: 2, nome: 'Endodontia' },\n            { id: 3, nome: 'Periodontia' },\n            { id: 4, nome: 'Implantodontia' },\n            { id: 5, nome: 'Odontopediatria' }\n          ]);\n        }\n      };\n      \n      fetchEspecialidades();\n    }\n  }, [role]);\n  \n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    setSuccessful(false);\n    setLoading(true);\n    \n    try {\n      console.log(\"Iniciando registro...\");\n      \n      // Preparar dados específicos com base no papel selecionado\n      let dadosEspecificos = {};\n      \n      if (role === 'cliente') {\n        dadosEspecificos = {};\n      } else if (role === 'medico') {\n        dadosEspecificos = {\n          especialidade_id: parseInt(especialidade_id),\n          crm: crm\n        };\n      } else if (role === 'admin') {\n        dadosEspecificos = {\n          nivel_acesso: nivelAcesso\n        };\n      }\n      \n      console.log(\"Enviando dados:\", {\n        email,\n        senha: password,\n        nome,\n        telefone,\n        tipo: role,\n        ...dadosEspecificos\n      });\n      \n      const response = await AuthService.register(\n        email,\n        password,\n        nome,\n        telefone,\n        role,\n        dadosEspecificos\n      );\n      \n      console.log(\"Resposta recebida:\", response);\n      \n      setMessage(response.data.message);\n      setSuccessful(true);\n      \n      // Redirecionar para login após registro bem-sucedido\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    } catch (error) {\n      console.error(\"Erro no registro:\", error);\n      \n      const resMessage =\n        (error.response && \n         error.response.data &&\n         error.response.data.message) ||\n        error.message ||\n        error.toString();\n      \n      setMessage(resMessage);\n      setSuccessful(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <PageContainer>\n      <Navbar />\n      \n      <MainContent>\n        <RegisterCard>\n          <CardTitle>Criar Conta</CardTitle>\n          \n          {message && (\n            <AlertMessage className={successful ? 'success' : 'error'}>\n              {message}\n            </AlertMessage>\n          )}\n          \n          <Form onSubmit={handleRegister}>\n            <RoleSelector>\n              <RoleButton\n                type=\"button\"\n                active={role === 'cliente'}\n                onClick={() => setRole('cliente')}\n              >\n                Cliente\n              </RoleButton>\n              <RoleButton\n                type=\"button\"\n                active={role === 'medico'}\n                onClick={() => setRole('medico')}\n              >\n                Médico\n              </RoleButton>\n              <RoleButton\n                type=\"button\"\n                active={role === 'admin'}\n                onClick={() => setRole('admin')}\n              >\n                Administrador\n              </RoleButton>\n            </RoleSelector>\n            \n            <FormRow>\n              <FormGroup>\n                <Label htmlFor=\"username\">Nome de Utilizador</Label>\n                <Input\n                  type=\"text\"\n                  id=\"username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n              </FormGroup>\n              \n              <FormGroup>\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </FormGroup>\n            </FormRow>\n            \n            <FormGroup>\n              <Label htmlFor=\"password\">Senha</Label>\n              <Input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"nome\">Nome Completo</Label>\n              <Input\n                type=\"text\"\n                id=\"nome\"\n                value={nome}\n                onChange={(e) => setNome(e.target.value)}\n                required\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"telefone\">Telefone</Label>\n              <Input\n                type=\"tel\"\n                id=\"telefone\"\n                value={telefone}\n                onChange={(e) => setTelefone(e.target.value)}\n                required\n              />\n            </FormGroup>\n            \n            {/* Campos específicos para cliente */}\n            {role === 'cliente' && (\n              <>\n                <FormRow>\n                  <FormGroup>\n                    <Label htmlFor=\"dataNascimento\">Data de Nascimento</Label>\n                    <Input\n                      type=\"date\"\n                      id=\"dataNascimento\"\n                      value={dataNascimento}\n                      onChange={(e) => setDataNascimento(e.target.value)}\n                      required\n                    />\n                  </FormGroup>\n                  \n                  <FormGroup>\n                    <Label htmlFor=\"nif\">NIF</Label>\n                    <Input\n                      type=\"text\"\n                      id=\"nif\"\n                      value={nif}\n                      onChange={(e) => setNif(e.target.value)}\n                      required\n                    />\n                  </FormGroup>\n                </FormRow>\n                \n                <FormGroup>\n                  <Label htmlFor=\"morada\">Morada</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"morada\"\n                    value={morada}\n                    onChange={(e) => setMorada(e.target.value)}\n                    required\n                  />\n                </FormGroup>\n              </>\n            )}\n            \n            {/* Campos específicos para médico */}\n            {role === 'medico' && (\n              <>\n                <FormGroup>\n                  <Label htmlFor=\"especialidade\">Especialidade</Label>\n                  <Select\n                    id=\"especialidade\"\n                    value={especialidade_id}\n                    onChange={(e) => setEspecialidadeId(e.target.value)}\n                    required\n                  >\n                    <option value=\"\">Selecione uma especialidade</option>\n                    {especialidades.map(esp => (\n                      <option key={esp.id} value={esp.id}>\n                        {esp.nome}\n                      </option>\n                    ))}\n                  </Select>\n                </FormGroup>\n                \n                <FormGroup>\n                  <Label htmlFor=\"crm\">CRM (Cédula Profissional)</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"crm\"\n                    value={crm}\n                    onChange={(e) => setCrm(e.target.value)}\n                    required\n                  />\n                </FormGroup>\n              </>\n            )}\n            \n            {/* Campos específicos para admin */}\n            {role === 'admin' && (\n              <FormGroup>\n                <Label htmlFor=\"nivelAcesso\">Nível de Acesso</Label>\n                <Select\n                  id=\"nivelAcesso\"\n                  value={nivelAcesso}\n                  onChange={(e) => setNivelAcesso(e.target.value)}\n                  required\n                >\n                  <option value=\"geral\">Geral</option>\n                  <option value=\"total\">Total</option>\n                  <option value=\"restrito\">Restrito</option>\n                </Select>\n              </FormGroup>\n            )}\n            \n            <Button type=\"submit\" disabled={loading}>\n              {loading ? 'A processar...' : 'Registar'}\n            </Button>\n            \n            <LoginLink>\n              Já tem uma conta? <Link to=\"/login\">Faça login</Link>\n            </LoginLink>\n          </Form>\n        </RegisterCard>\n      </MainContent>\n      \n      <Footer />\n    </PageContainer>\n  );\n}\n\nexport default RegisterPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,aAAa,GAAGT,MAAM,CAACU,GAAG;AAChC;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,aAAa;AAMnB,MAAMG,WAAW,GAAGZ,MAAM,CAACa,IAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,WAAW;AASjB,MAAMG,YAAY,GAAGf,MAAM,CAACU,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAPID,YAAY;AASlB,MAAME,SAAS,GAAGjB,MAAM,CAACkB,EAAE;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,SAAS;AAOf,MAAMG,IAAI,GAAGpB,MAAM,CAACqB,IAAI;AACxB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,IAAI;AAMV,MAAMG,SAAS,GAAGvB,MAAM,CAACU,GAAG;AAC5B;AACA;AACA,CAAC;AAACc,GAAA,GAHID,SAAS;AAKf,MAAME,OAAO,GAAGzB,MAAM,CAACU,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgB,GAAA,GAXID,OAAO;AAab,MAAME,KAAK,GAAG3B,MAAM,CAAC4B,KAAK;AAC1B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,KAAK;AAMX,MAAMG,KAAK,GAAG9B,MAAM,CAAC+B,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAXIF,KAAK;AAaX,MAAMG,MAAM,GAAGjC,MAAM,CAACkC,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAXIF,MAAM;AAaZ,MAAMG,MAAM,GAAGpC,MAAM,CAACqC,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GApBIF,MAAM;AAsBZ,MAAMG,YAAY,GAAGvC,MAAM,CAACU,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC8B,IAAA,GAdID,YAAY;AAgBlB,MAAME,SAAS,GAAGzC,MAAM,CAAC0C,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAhBIF,SAAS;AAkBf,MAAMG,YAAY,GAAG5C,MAAM,CAACU,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACmC,IAAA,GARID,YAAY;AAUlB,MAAME,UAAU,GAAG9C,MAAM,CAACqC,MAAM;AAChC;AACA;AACA,sBAAsBU,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,SAAS,GAAG,SAAS;AACnE,WAAWD,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,OAAO,GAAG,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBD,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,SAAS,GAAG,SAAS;AACrE;AACA,CAAC;AAACC,IAAA,GAfIH,UAAU;AAiBhB,SAASI,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0D,KAAK,EAAEC,QAAQ,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4D,QAAQ,EAAEC,WAAW,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC8D,IAAI,EAAEC,OAAO,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgE,QAAQ,EAAEC,WAAW,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkE,IAAI,EAAEC,OAAO,CAAC,GAAGnE,QAAQ,CAAC,SAAS,CAAC;;EAE3C;EACA,MAAM,CAACoE,cAAc,EAAEC,iBAAiB,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACsE,GAAG,EAAEC,MAAM,CAAC,GAAGvE,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACwE,MAAM,EAAEC,SAAS,CAAC,GAAGzE,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAM,CAAC0E,gBAAgB,EAAEC,kBAAkB,CAAC,GAAG3E,QAAQ,CAAC,EAAE,CAAC;EAC3D,MAAM,CAAC4E,GAAG,EAAEC,MAAM,CAAC,GAAG7E,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAAC8E,cAAc,EAAEC,iBAAiB,CAAC,GAAG/E,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAM,CAACgF,WAAW,EAAEC,cAAc,CAAC,GAAGjF,QAAQ,CAAC,OAAO,CAAC;EAEvD,MAAM,CAACkF,OAAO,EAAEC,UAAU,CAAC,GAAGnF,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoF,UAAU,EAAEC,aAAa,CAAC,GAAGrF,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACsF,OAAO,EAAEC,UAAU,CAAC,GAAGvF,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMwF,QAAQ,GAAGrF,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd;IACA,IAAIiE,IAAI,KAAK,QAAQ,EAAE;MACrB,MAAMuB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;QACtC,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMpF,KAAK,CAACqF,GAAG,CAAC,0CAA0C,CAAC;UAC5EZ,iBAAiB,CAACW,QAAQ,CAACE,IAAI,CAAC;QAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;UACxDd,iBAAiB,CAAC,CAChB;YAAEgB,EAAE,EAAE,CAAC;YAAEjC,IAAI,EAAE;UAAa,CAAC,EAC7B;YAAEiC,EAAE,EAAE,CAAC;YAAEjC,IAAI,EAAE;UAAa,CAAC,EAC7B;YAAEiC,EAAE,EAAE,CAAC;YAAEjC,IAAI,EAAE;UAAc,CAAC,EAC9B;YAAEiC,EAAE,EAAE,CAAC;YAAEjC,IAAI,EAAE;UAAiB,CAAC,EACjC;YAAEiC,EAAE,EAAE,CAAC;YAAEjC,IAAI,EAAE;UAAkB,CAAC,CACnC,CAAC;QACJ;MACF,CAAC;MAED2B,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACvB,IAAI,CAAC,CAAC;EAEV,MAAM8B,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBf,UAAU,CAAC,EAAE,CAAC;IACdE,aAAa,CAAC,KAAK,CAAC;IACpBE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACFO,OAAO,CAACK,GAAG,CAAC,uBAAuB,CAAC;;MAEpC;MACA,IAAIC,gBAAgB,GAAG,CAAC,CAAC;MAEzB,IAAIlC,IAAI,KAAK,SAAS,EAAE;QACtBkC,gBAAgB,GAAG,CAAC,CAAC;MACvB,CAAC,MAAM,IAAIlC,IAAI,KAAK,QAAQ,EAAE;QAC5BkC,gBAAgB,GAAG;UACjB1B,gBAAgB,EAAE2B,QAAQ,CAAC3B,gBAAgB,CAAC;UAC5CE,GAAG,EAAEA;QACP,CAAC;MACH,CAAC,MAAM,IAAIV,IAAI,KAAK,OAAO,EAAE;QAC3BkC,gBAAgB,GAAG;UACjBE,YAAY,EAAEtB;QAChB,CAAC;MACH;MAEAc,OAAO,CAACK,GAAG,CAAC,iBAAiB,EAAE;QAC7BzC,KAAK;QACL6C,KAAK,EAAE3C,QAAQ;QACfE,IAAI;QACJE,QAAQ;QACRwC,IAAI,EAAEtC,IAAI;QACV,GAAGkC;MACL,CAAC,CAAC;MAEF,MAAMV,QAAQ,GAAG,MAAMrF,WAAW,CAACoG,QAAQ,CACzC/C,KAAK,EACLE,QAAQ,EACRE,IAAI,EACJE,QAAQ,EACRE,IAAI,EACJkC,gBACF,CAAC;MAEDN,OAAO,CAACK,GAAG,CAAC,oBAAoB,EAAET,QAAQ,CAAC;MAE3CP,UAAU,CAACO,QAAQ,CAACE,IAAI,CAACV,OAAO,CAAC;MACjCG,aAAa,CAAC,IAAI,CAAC;;MAEnB;MACAqB,UAAU,CAAC,MAAM;QACflB,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAEzC,MAAMc,UAAU,GACbd,KAAK,CAACH,QAAQ,IACdG,KAAK,CAACH,QAAQ,CAACE,IAAI,IACnBC,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACV,OAAO,IAC5BW,KAAK,CAACX,OAAO,IACbW,KAAK,CAACe,QAAQ,CAAC,CAAC;MAElBzB,UAAU,CAACwB,UAAU,CAAC;MACtBtB,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACE7E,OAAA,CAACG,aAAa;IAAAgG,QAAA,gBACZnG,OAAA,CAACH,MAAM;MAAAuG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVvG,OAAA,CAACM,WAAW;MAAA6F,QAAA,eACVnG,OAAA,CAACS,YAAY;QAAA0F,QAAA,gBACXnG,OAAA,CAACW,SAAS;UAAAwF,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,EAEjC/B,OAAO,iBACNxE,OAAA,CAACiC,YAAY;UAACuE,SAAS,EAAE9B,UAAU,GAAG,SAAS,GAAG,OAAQ;UAAAyB,QAAA,EACvD3B;QAAO;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CACf,eAEDvG,OAAA,CAACc,IAAI;UAAC2F,QAAQ,EAAEnB,cAAe;UAAAa,QAAA,gBAC7BnG,OAAA,CAACsC,YAAY;YAAA6D,QAAA,gBACXnG,OAAA,CAACwC,UAAU;cACTkE,IAAI,EAAC,QAAQ;cACbhE,MAAM,EAAEc,IAAI,KAAK,SAAU;cAC3BmD,OAAO,EAAEA,CAAA,KAAMlD,OAAO,CAAC,SAAS,CAAE;cAAA0C,QAAA,EACnC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbvG,OAAA,CAACwC,UAAU;cACTkE,IAAI,EAAC,QAAQ;cACbhE,MAAM,EAAEc,IAAI,KAAK,QAAS;cAC1BmD,OAAO,EAAEA,CAAA,KAAMlD,OAAO,CAAC,QAAQ,CAAE;cAAA0C,QAAA,EAClC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbvG,OAAA,CAACwC,UAAU;cACTkE,IAAI,EAAC,QAAQ;cACbhE,MAAM,EAAEc,IAAI,KAAK,OAAQ;cACzBmD,OAAO,EAAEA,CAAA,KAAMlD,OAAO,CAAC,OAAO,CAAE;cAAA0C,QAAA,EACjC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAEfvG,OAAA,CAACmB,OAAO;YAAAgF,QAAA,gBACNnG,OAAA,CAACiB,SAAS;cAAAkF,QAAA,gBACRnG,OAAA,CAACqB,KAAK;gBAACuF,OAAO,EAAC,UAAU;gBAAAT,QAAA,EAAC;cAAkB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACpDvG,OAAA,CAACwB,KAAK;gBACJkF,IAAI,EAAC,MAAM;gBACXrB,EAAE,EAAC,UAAU;gBACbwB,KAAK,EAAE/D,QAAS;gBAChBgE,QAAQ,EAAGvB,CAAC,IAAKxC,WAAW,CAACwC,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;gBAC7CG,QAAQ;cAAA;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC,eAEZvG,OAAA,CAACiB,SAAS;cAAAkF,QAAA,gBACRnG,OAAA,CAACqB,KAAK;gBAACuF,OAAO,EAAC,OAAO;gBAAAT,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACpCvG,OAAA,CAACwB,KAAK;gBACJkF,IAAI,EAAC,OAAO;gBACZrB,EAAE,EAAC,OAAO;gBACVwB,KAAK,EAAE7D,KAAM;gBACb8D,QAAQ,EAAGvB,CAAC,IAAKtC,QAAQ,CAACsC,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;gBAC1CG,QAAQ;cAAA;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAEVvG,OAAA,CAACiB,SAAS;YAAAkF,QAAA,gBACRnG,OAAA,CAACqB,KAAK;cAACuF,OAAO,EAAC,UAAU;cAAAT,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvCvG,OAAA,CAACwB,KAAK;cACJkF,IAAI,EAAC,UAAU;cACfrB,EAAE,EAAC,UAAU;cACbwB,KAAK,EAAE3D,QAAS;cAChB4D,QAAQ,EAAGvB,CAAC,IAAKpC,WAAW,CAACoC,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;cAC7CG,QAAQ;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC,eAEZvG,OAAA,CAACiB,SAAS;YAAAkF,QAAA,gBACRnG,OAAA,CAACqB,KAAK;cAACuF,OAAO,EAAC,MAAM;cAAAT,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3CvG,OAAA,CAACwB,KAAK;cACJkF,IAAI,EAAC,MAAM;cACXrB,EAAE,EAAC,MAAM;cACTwB,KAAK,EAAEzD,IAAK;cACZ0D,QAAQ,EAAGvB,CAAC,IAAKlC,OAAO,CAACkC,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;cACzCG,QAAQ;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC,eAEZvG,OAAA,CAACiB,SAAS;YAAAkF,QAAA,gBACRnG,OAAA,CAACqB,KAAK;cAACuF,OAAO,EAAC,UAAU;cAAAT,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC1CvG,OAAA,CAACwB,KAAK;cACJkF,IAAI,EAAC,KAAK;cACVrB,EAAE,EAAC,UAAU;cACbwB,KAAK,EAAEvD,QAAS;cAChBwD,QAAQ,EAAGvB,CAAC,IAAKhC,WAAW,CAACgC,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;cAC7CG,QAAQ;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC,EAGX/C,IAAI,KAAK,SAAS,iBACjBxD,OAAA,CAAAE,SAAA;YAAAiG,QAAA,gBACEnG,OAAA,CAACmB,OAAO;cAAAgF,QAAA,gBACNnG,OAAA,CAACiB,SAAS;gBAAAkF,QAAA,gBACRnG,OAAA,CAACqB,KAAK;kBAACuF,OAAO,EAAC,gBAAgB;kBAAAT,QAAA,EAAC;gBAAkB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC1DvG,OAAA,CAACwB,KAAK;kBACJkF,IAAI,EAAC,MAAM;kBACXrB,EAAE,EAAC,gBAAgB;kBACnBwB,KAAK,EAAEnD,cAAe;kBACtBoD,QAAQ,EAAGvB,CAAC,IAAK5B,iBAAiB,CAAC4B,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;kBACnDG,QAAQ;gBAAA;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACO,CAAC,eAEZvG,OAAA,CAACiB,SAAS;gBAAAkF,QAAA,gBACRnG,OAAA,CAACqB,KAAK;kBAACuF,OAAO,EAAC,KAAK;kBAAAT,QAAA,EAAC;gBAAG;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAChCvG,OAAA,CAACwB,KAAK;kBACJkF,IAAI,EAAC,MAAM;kBACXrB,EAAE,EAAC,KAAK;kBACRwB,KAAK,EAAEjD,GAAI;kBACXkD,QAAQ,EAAGvB,CAAC,IAAK1B,MAAM,CAAC0B,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;kBACxCG,QAAQ;gBAAA;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAEVvG,OAAA,CAACiB,SAAS;cAAAkF,QAAA,gBACRnG,OAAA,CAACqB,KAAK;gBAACuF,OAAO,EAAC,QAAQ;gBAAAT,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACtCvG,OAAA,CAACwB,KAAK;gBACJkF,IAAI,EAAC,MAAM;gBACXrB,EAAE,EAAC,QAAQ;gBACXwB,KAAK,EAAE/C,MAAO;gBACdgD,QAAQ,EAAGvB,CAAC,IAAKxB,SAAS,CAACwB,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;gBAC3CG,QAAQ;cAAA;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC;UAAA,eACZ,CACH,EAGA/C,IAAI,KAAK,QAAQ,iBAChBxD,OAAA,CAAAE,SAAA;YAAAiG,QAAA,gBACEnG,OAAA,CAACiB,SAAS;cAAAkF,QAAA,gBACRnG,OAAA,CAACqB,KAAK;gBAACuF,OAAO,EAAC,eAAe;gBAAAT,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACpDvG,OAAA,CAAC2B,MAAM;gBACL0D,EAAE,EAAC,eAAe;gBAClBwB,KAAK,EAAE7C,gBAAiB;gBACxB8C,QAAQ,EAAGvB,CAAC,IAAKtB,kBAAkB,CAACsB,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;gBACpDG,QAAQ;gBAAAb,QAAA,gBAERnG,OAAA;kBAAQ6G,KAAK,EAAC,EAAE;kBAAAV,QAAA,EAAC;gBAA2B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACpDnC,cAAc,CAAC6C,GAAG,CAACC,GAAG,iBACrBlH,OAAA;kBAAqB6G,KAAK,EAAEK,GAAG,CAAC7B,EAAG;kBAAAc,QAAA,EAChCe,GAAG,CAAC9D;gBAAI,GADE8D,GAAG,CAAC7B,EAAE;kBAAAe,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEX,CACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eAEZvG,OAAA,CAACiB,SAAS;cAAAkF,QAAA,gBACRnG,OAAA,CAACqB,KAAK;gBAACuF,OAAO,EAAC,KAAK;gBAAAT,QAAA,EAAC;cAAyB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACtDvG,OAAA,CAACwB,KAAK;gBACJkF,IAAI,EAAC,MAAM;gBACXrB,EAAE,EAAC,KAAK;gBACRwB,KAAK,EAAE3C,GAAI;gBACX4C,QAAQ,EAAGvB,CAAC,IAAKpB,MAAM,CAACoB,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;gBACxCG,QAAQ;cAAA;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC;UAAA,eACZ,CACH,EAGA/C,IAAI,KAAK,OAAO,iBACfxD,OAAA,CAACiB,SAAS;YAAAkF,QAAA,gBACRnG,OAAA,CAACqB,KAAK;cAACuF,OAAO,EAAC,aAAa;cAAAT,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpDvG,OAAA,CAAC2B,MAAM;cACL0D,EAAE,EAAC,aAAa;cAChBwB,KAAK,EAAEvC,WAAY;cACnBwC,QAAQ,EAAGvB,CAAC,IAAKhB,cAAc,CAACgB,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;cAChDG,QAAQ;cAAAb,QAAA,gBAERnG,OAAA;gBAAQ6G,KAAK,EAAC,OAAO;gBAAAV,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpCvG,OAAA;gBAAQ6G,KAAK,EAAC,OAAO;gBAAAV,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpCvG,OAAA;gBAAQ6G,KAAK,EAAC,UAAU;gBAAAV,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACZ,eAEDvG,OAAA,CAAC8B,MAAM;YAAC4E,IAAI,EAAC,QAAQ;YAACS,QAAQ,EAAEvC,OAAQ;YAAAuB,QAAA,EACrCvB,OAAO,GAAG,gBAAgB,GAAG;UAAU;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,eAETvG,OAAA,CAACmC,SAAS;YAAAgE,QAAA,GAAC,uBACS,eAAAnG,OAAA,CAACR,IAAI;cAAC4H,EAAE,EAAC,QAAQ;cAAAjB,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAEdvG,OAAA,CAACF,MAAM;MAAAsG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEpB;AAAC1D,EAAA,CA/TQD,YAAY;EAAA,QAyBFnD,WAAW;AAAA;AAAA4H,IAAA,GAzBrBzE,YAAY;AAiUrB,eAAeA,YAAY;AAAC,IAAAvC,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAAI,IAAA,EAAA0E,IAAA;AAAAC,YAAA,CAAAjH,EAAA;AAAAiH,YAAA,CAAA9G,GAAA;AAAA8G,YAAA,CAAA5G,GAAA;AAAA4G,YAAA,CAAAzG,GAAA;AAAAyG,YAAA,CAAAtG,GAAA;AAAAsG,YAAA,CAAApG,GAAA;AAAAoG,YAAA,CAAAlG,GAAA;AAAAkG,YAAA,CAAA/F,GAAA;AAAA+F,YAAA,CAAA5F,GAAA;AAAA4F,YAAA,CAAAzF,IAAA;AAAAyF,YAAA,CAAAtF,IAAA;AAAAsF,YAAA,CAAApF,IAAA;AAAAoF,YAAA,CAAAjF,IAAA;AAAAiF,YAAA,CAAA/E,IAAA;AAAA+E,YAAA,CAAA3E,IAAA;AAAA2E,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}