{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nimport AuthService from './auth.service';\n\n// Detectar automaticamente o ambiente e configurar a URL base\nconst baseURL = process.env.REACT_APP_API_URL || (window.location.hostname === 'localhost' ? 'http://localhost:8000/api/' : '/api/');\nconst API_URL = `${baseURL}clientes/`;\nclass ClienteService {\n  async getClienteProfile() {\n    const user = AuthService.getCurrentUser();\n    if (!user) {\n      throw new Error('User not authenticated');\n    }\n\n    // Try to get profile using user ID\n    return axios.get(API_URL + user.user.id, {\n      headers: authHeader()\n    });\n  }\n  async updateClienteProfile(clienteData) {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!user) {\n      throw new Error('User not authenticated');\n    }\n\n    // Use the user ID from the authenticated user\n    return axios.put(API_URL + user.user.id, clienteData, {\n      headers: authHeader()\n    });\n  }\n  async getAgendamentos() {\n    return axios.get(API_URL + 'agendamentos', {\n      headers: authHeader()\n    });\n  }\n  async updateHistorico(historicoData) {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!user) {\n      throw new Error('User not authenticated');\n    }\n    return axios.post(API_URL + user.user.id + '/historico', {\n      historico: JSON.stringify(historicoData)\n    }, {\n      headers: authHeader()\n    });\n  }\n}\nexport default new ClienteService();","map":{"version":3,"names":["axios","authHeader","AuthService","baseURL","process","env","REACT_APP_API_URL","window","location","hostname","API_URL","ClienteService","getClienteProfile","user","getCurrentUser","Error","get","id","headers","updateClienteProfile","clienteData","JSON","parse","localStorage","getItem","put","getAgendamentos","updateHistorico","historicoData","post","historico","stringify"],"sources":["C:/Users/s0ares/clinicadentaria_ai2/client/src/services/cliente.service.js"],"sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\nimport AuthService from './auth.service';\r\n\r\n// Detectar automaticamente o ambiente e configurar a URL base\r\nconst baseURL = process.env.REACT_APP_API_URL || \r\n               (window.location.hostname === 'localhost' ? \r\n                'http://localhost:8000/api/' : \r\n                '/api/');\r\n\r\nconst API_URL = `${baseURL}clientes/`;\r\n\r\nclass ClienteService {\r\n  async getClienteProfile() {\r\n    const user = AuthService.getCurrentUser();\r\n    if (!user) {\r\n      throw new Error('User not authenticated');\r\n    }\r\n    \r\n    // Try to get profile using user ID\r\n    return axios.get(API_URL + user.user.id, { headers: authHeader() });\r\n  }\r\n  \r\n  async updateClienteProfile(clienteData) {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (!user) {\r\n      throw new Error('User not authenticated');\r\n    }\r\n    \r\n    // Use the user ID from the authenticated user\r\n    return axios.put(API_URL + user.user.id, clienteData, { headers: authHeader() });\r\n  }\r\n  \r\n  async getAgendamentos() {\r\n    return axios.get(API_URL + 'agendamentos', { headers: authHeader() });\r\n  }\r\n  \r\n  async updateHistorico(historicoData) {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (!user) {\r\n      throw new Error('User not authenticated');\r\n    }\r\n    \r\n    return axios.post(API_URL + user.user.id + '/historico', \r\n      { historico: JSON.stringify(historicoData) }, \r\n      { headers: authHeader() }\r\n    );\r\n  }\r\n}\r\n\r\nexport default new ClienteService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,WAAW,MAAM,gBAAgB;;AAExC;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,KAC7BC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,GACxC,4BAA4B,GAC5B,OAAO,CAAC;AAExB,MAAMC,OAAO,GAAG,GAAGP,OAAO,WAAW;AAErC,MAAMQ,cAAc,CAAC;EACnB,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,MAAMC,IAAI,GAAGX,WAAW,CAACY,cAAc,CAAC,CAAC;IACzC,IAAI,CAACD,IAAI,EAAE;MACT,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;IAC3C;;IAEA;IACA,OAAOf,KAAK,CAACgB,GAAG,CAACN,OAAO,GAAGG,IAAI,CAACA,IAAI,CAACI,EAAE,EAAE;MAAEC,OAAO,EAAEjB,UAAU,CAAC;IAAE,CAAC,CAAC;EACrE;EAEA,MAAMkB,oBAAoBA,CAACC,WAAW,EAAE;IACtC,MAAMP,IAAI,GAAGQ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAI,CAACX,IAAI,EAAE;MACT,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;IAC3C;;IAEA;IACA,OAAOf,KAAK,CAACyB,GAAG,CAACf,OAAO,GAAGG,IAAI,CAACA,IAAI,CAACI,EAAE,EAAEG,WAAW,EAAE;MAAEF,OAAO,EAAEjB,UAAU,CAAC;IAAE,CAAC,CAAC;EAClF;EAEA,MAAMyB,eAAeA,CAAA,EAAG;IACtB,OAAO1B,KAAK,CAACgB,GAAG,CAACN,OAAO,GAAG,cAAc,EAAE;MAAEQ,OAAO,EAAEjB,UAAU,CAAC;IAAE,CAAC,CAAC;EACvE;EAEA,MAAM0B,eAAeA,CAACC,aAAa,EAAE;IACnC,MAAMf,IAAI,GAAGQ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAI,CAACX,IAAI,EAAE;MACT,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,OAAOf,KAAK,CAAC6B,IAAI,CAACnB,OAAO,GAAGG,IAAI,CAACA,IAAI,CAACI,EAAE,GAAG,YAAY,EACrD;MAAEa,SAAS,EAAET,IAAI,CAACU,SAAS,CAACH,aAAa;IAAE,CAAC,EAC5C;MAAEV,OAAO,EAAEjB,UAAU,CAAC;IAAE,CAC1B,CAAC;EACH;AACF;AAEA,eAAe,IAAIU,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}