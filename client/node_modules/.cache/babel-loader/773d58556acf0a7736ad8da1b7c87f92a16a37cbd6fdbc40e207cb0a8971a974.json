{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s0ares\\\\clinicadentaria_ai2\\\\client\\\\src\\\\views\\\\cliente\\\\ClientePerfilPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport AuthService from '../../services/auth.service';\nimport authHeader from '../../services/auth-header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileContainer = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n  padding: 2rem;\n`;\n_c = ProfileContainer;\nconst ProfileSection = styled.div`\n  margin-bottom: 2rem;\n`;\n_c2 = ProfileSection;\nconst SectionTitle = styled.h3`\n  font-size: 1.25rem;\n  color: #2c3e50;\n  margin-bottom: 1.5rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid #ecf0f1;\n`;\n_c3 = SectionTitle;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n_c4 = Form;\nconst FormRow = styled.div`\n  display: flex;\n  gap: 1rem;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 1.5rem;\n  }\n`;\n_c5 = FormRow;\nconst FormGroup = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n_c6 = FormGroup;\nconst Label = styled.label`\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n`;\n_c7 = Label;\nconst Input = styled.input`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  transition: border-color 0.3s;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n_c8 = Input;\nconst TextArea = styled.textarea`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n  transition: border-color 0.3s;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  background-color: #3498db;\n  color: #fff;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  align-self: flex-start;\n\n  &:hover {\n    background-color: #2980b9;\n  }\n\n  &:disabled {\n    background-color: #95a5a6;\n    cursor: not-allowed;\n  }\n`;\n_c9 = Button;\nconst HistoryContainer = styled.div`\n  margin-top: 2rem;\n`;\n_c10 = HistoryContainer;\nconst HistoryItem = styled.div`\n  background-color: #f8f9fa;\n  border-left: 3px solid #3498db;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  border-radius: 4px;\n`;\n_c11 = HistoryItem;\nconst HistoryDate = styled.div`\n  font-size: 0.875rem;\n  color: #7f8c8d;\n  margin-bottom: 0.5rem;\n`;\n_c12 = HistoryDate;\nconst HistoryContent = styled.div`\n  color: #2c3e50;\n`;\n_c13 = HistoryContent;\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 2rem;\n  color: #7f8c8d;\n`;\n_c14 = EmptyState;\nconst API_URL = 'http://localhost:5000/api';\nfunction ClientePerfilPage() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [cliente, setCliente] = useState(null);\n  const [historico, setHistorico] = useState([]);\n\n  // Campos do formulário\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [telefone, setTelefone] = useState('');\n  const [dataNascimento, setDataNascimento] = useState('');\n  const [morada, setMorada] = useState('');\n  const [nif, setNif] = useState('');\n  const [historicoText, setHistoricoText] = useState('');\n  const currentUser = AuthService.getCurrentUser();\n  useEffect(() => {\n    fetchClienteData();\n  }, []);\n  const fetchClienteData = async () => {\n    try {\n      setLoading(true);\n\n      // Se já temos os dados do cliente no objeto de usuário atual\n      if (currentUser && currentUser.clienteData) {\n        setCliente(currentUser.clienteData);\n        setFormData(currentUser.clienteData);\n\n        // Processar histórico se existir\n        if (currentUser.clienteData.historico) {\n          try {\n            const historicoArray = JSON.parse(currentUser.clienteData.historico);\n            setHistorico(Array.isArray(historicoArray) ? historicoArray : []);\n          } catch (e) {\n            setHistorico([]);\n          }\n        }\n      } else {\n        // Buscar dados do cliente da API\n        const response = await axios.get(`${API_URL}/clientes/perfil`, {\n          headers: authHeader()\n        });\n        if (response.data) {\n          setCliente(response.data);\n          setFormData(response.data);\n\n          // Processar histórico se existir\n          if (response.data.historico) {\n            try {\n              const historicoArray = JSON.parse(response.data.historico);\n              setHistorico(Array.isArray(historicoArray) ? historicoArray : []);\n            } catch (e) {\n              setHistorico([]);\n            }\n          }\n        }\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error('Erro ao carregar dados do cliente:', error);\n      setLoading(false);\n      toast.error('Erro ao carregar seus dados');\n    }\n  };\n  const setFormData = data => {\n    setNome(data.nome || '');\n    setEmail(data.email || '');\n    setTelefone(data.telefone || '');\n    setDataNascimento(data.dataNascimento ? data.dataNascimento.split('T')[0] : '');\n    setMorada(data.morada || '');\n    setNif(data.nif || '');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSaving(true);\n    try {\n      const clienteData = {\n        nome,\n        email,\n        telefone,\n        dataNascimento,\n        morada,\n        nif\n      };\n      await axios.put(`${API_URL}/clientes/perfil`, clienteData, {\n        headers: authHeader()\n      });\n      toast.success('Perfil atualizado com sucesso!');\n      setSaving(false);\n\n      // Atualizar dados locais\n      setCliente({\n        ...cliente,\n        ...clienteData\n      });\n\n      // Adicionar entrada ao histórico\n      const newHistoryEntry = {\n        date: new Date().toISOString(),\n        action: 'Atualização de perfil',\n        details: 'Informações pessoais atualizadas'\n      };\n      const updatedHistorico = [newHistoryEntry, ...historico];\n      setHistorico(updatedHistorico);\n\n      // Atualizar histórico no servidor\n      await axios.post(`${API_URL}/clientes/historico`, {\n        historico: JSON.stringify(updatedHistorico)\n      }, {\n        headers: authHeader()\n      });\n    } catch (error) {\n      console.error('Erro ao atualizar perfil:', error);\n      toast.error('Erro ao atualizar perfil');\n      setSaving(false);\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('pt-PT', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando dados do perfil...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ProfileContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ProfileSection, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"Informa\\xE7\\xF5es Pessoais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"nome\",\n            children: \"Nome Completo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"nome\",\n            value: nome,\n            onChange: e => setNome(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              color: '#7f8c8d',\n              marginTop: '0.25rem'\n            },\n            children: \"O email n\\xE3o pode ser alterado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"telefone\",\n              children: \"Telefone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"tel\",\n              id: \"telefone\",\n              value: telefone,\n              onChange: e => setTelefone(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"dataNascimento\",\n              children: \"Data de Nascimento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"date\",\n              id: \"dataNascimento\",\n              value: dataNascimento,\n              onChange: e => setDataNascimento(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"morada\",\n            children: \"Morada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"morada\",\n            value: morada,\n            onChange: e => setMorada(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"nif\",\n            children: \"NIF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"nif\",\n            value: nif,\n            onChange: e => setNif(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: saving,\n          children: saving ? 'A guardar...' : 'Guardar Alterações'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileSection, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"Hist\\xF3rico de Atividades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HistoryContainer, {\n        children: historico.length > 0 ? historico.map((item, index) => /*#__PURE__*/_jsxDEV(HistoryItem, {\n          children: [/*#__PURE__*/_jsxDEV(HistoryDate, {\n            children: formatDate(item.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(HistoryContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: item.action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this), \": \", item.details]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(EmptyState, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nenhuma atividade registrada ainda.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n_s(ClientePerfilPage, \"1PXL6yiDCRehBAZ0csD6dERPASk=\");\n_c15 = ClientePerfilPage;\nexport default ClientePerfilPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"ProfileContainer\");\n$RefreshReg$(_c2, \"ProfileSection\");\n$RefreshReg$(_c3, \"SectionTitle\");\n$RefreshReg$(_c4, \"Form\");\n$RefreshReg$(_c5, \"FormRow\");\n$RefreshReg$(_c6, \"FormGroup\");\n$RefreshReg$(_c7, \"Label\");\n$RefreshReg$(_c8, \"Input\");\n$RefreshReg$(_c9, \"Button\");\n$RefreshReg$(_c10, \"HistoryContainer\");\n$RefreshReg$(_c11, \"HistoryItem\");\n$RefreshReg$(_c12, \"HistoryDate\");\n$RefreshReg$(_c13, \"HistoryContent\");\n$RefreshReg$(_c14, \"EmptyState\");\n$RefreshReg$(_c15, \"ClientePerfilPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","axios","toast","AuthService","authHeader","jsxDEV","_jsxDEV","ProfileContainer","div","_c","ProfileSection","_c2","SectionTitle","h3","_c3","Form","form","_c4","FormRow","_c5","FormGroup","_c6","Label","label","_c7","Input","input","_c8","TextArea","textarea","Button","button","_c9","HistoryContainer","_c10","HistoryItem","_c11","HistoryDate","_c12","HistoryContent","_c13","EmptyState","_c14","API_URL","ClientePerfilPage","_s","loading","setLoading","saving","setSaving","cliente","setCliente","historico","setHistorico","nome","setNome","email","setEmail","telefone","setTelefone","dataNascimento","setDataNascimento","morada","setMorada","nif","setNif","historicoText","setHistoricoText","currentUser","getCurrentUser","fetchClienteData","clienteData","setFormData","historicoArray","JSON","parse","Array","isArray","e","response","get","headers","data","error","console","split","handleSubmit","preventDefault","put","success","newHistoryEntry","date","Date","toISOString","action","details","updatedHistorico","post","stringify","formatDate","dateString","toLocaleDateString","day","month","year","hour","minute","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","style","color","marginTop","length","map","item","index","_c15","$RefreshReg$"],"sources":["C:/Users/s0ares/clinicadentaria_ai2/client/src/views/cliente/ClientePerfilPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport AuthService from '../../services/auth.service';\nimport authHeader from '../../services/auth-header';\n\nconst ProfileContainer = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n  padding: 2rem;\n`;\n\nconst ProfileSection = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.25rem;\n  color: #2c3e50;\n  margin-bottom: 1.5rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid #ecf0f1;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n\nconst FormRow = styled.div`\n  display: flex;\n  gap: 1rem;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 1.5rem;\n  }\n`;\n\nconst FormGroup = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n`;\n\nconst Input = styled.input`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  transition: border-color 0.3s;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\nconst TextArea = styled.textarea`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n  transition: border-color 0.3s;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  background-color: #3498db;\n  color: #fff;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  align-self: flex-start;\n\n  &:hover {\n    background-color: #2980b9;\n  }\n\n  &:disabled {\n    background-color: #95a5a6;\n    cursor: not-allowed;\n  }\n`;\n\nconst HistoryContainer = styled.div`\n  margin-top: 2rem;\n`;\n\nconst HistoryItem = styled.div`\n  background-color: #f8f9fa;\n  border-left: 3px solid #3498db;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  border-radius: 4px;\n`;\n\nconst HistoryDate = styled.div`\n  font-size: 0.875rem;\n  color: #7f8c8d;\n  margin-bottom: 0.5rem;\n`;\n\nconst HistoryContent = styled.div`\n  color: #2c3e50;\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 2rem;\n  color: #7f8c8d;\n`;\n\nconst API_URL = 'http://localhost:5000/api';\n\nfunction ClientePerfilPage() {\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [cliente, setCliente] = useState(null);\n  const [historico, setHistorico] = useState([]);\n  \n  // Campos do formulário\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [telefone, setTelefone] = useState('');\n  const [dataNascimento, setDataNascimento] = useState('');\n  const [morada, setMorada] = useState('');\n  const [nif, setNif] = useState('');\n  const [historicoText, setHistoricoText] = useState('');\n  \n  const currentUser = AuthService.getCurrentUser();\n  \n  useEffect(() => {\n    fetchClienteData();\n  }, []);\n  \n  const fetchClienteData = async () => {\n    try {\n      setLoading(true);\n      \n      // Se já temos os dados do cliente no objeto de usuário atual\n      if (currentUser && currentUser.clienteData) {\n        setCliente(currentUser.clienteData);\n        setFormData(currentUser.clienteData);\n        \n        // Processar histórico se existir\n        if (currentUser.clienteData.historico) {\n          try {\n            const historicoArray = JSON.parse(currentUser.clienteData.historico);\n            setHistorico(Array.isArray(historicoArray) ? historicoArray : []);\n          } catch (e) {\n            setHistorico([]);\n          }\n        }\n      } else {\n        // Buscar dados do cliente da API\n        const response = await axios.get(`${API_URL}/clientes/perfil`, { \n          headers: authHeader() \n        });\n        \n        if (response.data) {\n          setCliente(response.data);\n          setFormData(response.data);\n          \n          // Processar histórico se existir\n          if (response.data.historico) {\n            try {\n              const historicoArray = JSON.parse(response.data.historico);\n              setHistorico(Array.isArray(historicoArray) ? historicoArray : []);\n            } catch (e) {\n              setHistorico([]);\n            }\n          }\n        }\n      }\n      \n      setLoading(false);\n    } catch (error) {\n      console.error('Erro ao carregar dados do cliente:', error);\n      setLoading(false);\n      toast.error('Erro ao carregar seus dados');\n    }\n  };\n  \n  const setFormData = (data) => {\n    setNome(data.nome || '');\n    setEmail(data.email || '');\n    setTelefone(data.telefone || '');\n    setDataNascimento(data.dataNascimento ? data.dataNascimento.split('T')[0] : '');\n    setMorada(data.morada || '');\n    setNif(data.nif || '');\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSaving(true);\n    \n    try {\n      const clienteData = {\n        nome,\n        email,\n        telefone,\n        dataNascimento,\n        morada,\n        nif\n      };\n      \n      await axios.put(\n        `${API_URL}/clientes/perfil`,\n        clienteData,\n        { headers: authHeader() }\n      );\n      \n      toast.success('Perfil atualizado com sucesso!');\n      setSaving(false);\n      \n      // Atualizar dados locais\n      setCliente({...cliente, ...clienteData});\n      \n      // Adicionar entrada ao histórico\n      const newHistoryEntry = {\n        date: new Date().toISOString(),\n        action: 'Atualização de perfil',\n        details: 'Informações pessoais atualizadas'\n      };\n      \n      const updatedHistorico = [newHistoryEntry, ...historico];\n      setHistorico(updatedHistorico);\n      \n      // Atualizar histórico no servidor\n      await axios.post(\n        `${API_URL}/clientes/historico`,\n        { historico: JSON.stringify(updatedHistorico) },\n        { headers: authHeader() }\n      );\n      \n    } catch (error) {\n      console.error('Erro ao atualizar perfil:', error);\n      toast.error('Erro ao atualizar perfil');\n      setSaving(false);\n    }\n  };\n  \n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('pt-PT', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  \n  if (loading) {\n    return <div>Carregando dados do perfil...</div>;\n  }\n  \n  return (\n    <ProfileContainer>\n      <ProfileSection>\n        <SectionTitle>Informações Pessoais</SectionTitle>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label htmlFor=\"nome\">Nome Completo</Label>\n            <Input\n              type=\"text\"\n              id=\"nome\"\n              value={nome}\n              onChange={(e) => setNome(e.target.value)}\n              required\n            />\n          </FormGroup>\n          \n          <FormGroup>\n            <Label htmlFor=\"email\">Email</Label>\n            <Input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              disabled\n            />\n            <small style={{ color: '#7f8c8d', marginTop: '0.25rem' }}>\n              O email não pode ser alterado\n            </small>\n          </FormGroup>\n          \n          <FormRow>\n            <FormGroup>\n              <Label htmlFor=\"telefone\">Telefone</Label>\n              <Input\n                type=\"tel\"\n                id=\"telefone\"\n                value={telefone}\n                onChange={(e) => setTelefone(e.target.value)}\n                required\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"dataNascimento\">Data de Nascimento</Label>\n              <Input\n                type=\"date\"\n                id=\"dataNascimento\"\n                value={dataNascimento}\n                onChange={(e) => setDataNascimento(e.target.value)}\n                required\n              />\n            </FormGroup>\n          </FormRow>\n          \n          <FormGroup>\n            <Label htmlFor=\"morada\">Morada</Label>\n            <Input\n              type=\"text\"\n              id=\"morada\"\n              value={morada}\n              onChange={(e) => setMorada(e.target.value)}\n              required\n            />\n          </FormGroup>\n          \n          <FormGroup>\n            <Label htmlFor=\"nif\">NIF</Label>\n            <Input\n              type=\"text\"\n              id=\"nif\"\n              value={nif}\n              onChange={(e) => setNif(e.target.value)}\n              required\n            />\n          </FormGroup>\n          \n          <Button type=\"submit\" disabled={saving}>\n            {saving ? 'A guardar...' : 'Guardar Alterações'}\n          </Button>\n        </Form>\n      </ProfileSection>\n      \n      <ProfileSection>\n        <SectionTitle>Histórico de Atividades</SectionTitle>\n        <HistoryContainer>\n          {historico.length > 0 ? (\n            historico.map((item, index) => (\n              <HistoryItem key={index}>\n                <HistoryDate>{formatDate(item.date)}</HistoryDate>\n                <HistoryContent>\n                  <strong>{item.action}</strong>: {item.details}\n                </HistoryContent>\n              </HistoryItem>\n            ))\n          ) : (\n            <EmptyState>\n              <p>Nenhuma atividade registrada ainda.</p>\n            </EmptyState>\n          )}\n        </HistoryContainer>\n      </ProfileSection>\n    </ProfileContainer>\n  );\n}\n\nexport default ClientePerfilPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}