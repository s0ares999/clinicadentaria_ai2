{"ast":null,"code":"import axios from 'axios';\nimport AuthService from './auth.service';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\nclass ClienteService {\n  constructor() {\n    this.refreshAuth();\n  }\n  refreshAuth() {\n    const user = AuthService.getCurrentUser();\n    this.token = user === null || user === void 0 ? void 0 : user.accessToken;\n    this.authHeader = this.token ? {\n      Authorization: `Bearer ${this.token}`\n    } : {};\n    console.log(\"ClienteService - Token disponível:\", this.token ? \"Sim\" : \"Não\");\n  }\n  async getClienteProfile() {\n    try {\n      console.log(\"Buscando perfil do cliente em: \" + API_URL + \"perfil\");\n      const user = AuthService.getCurrentUser();\n\n      // Verificar se temos o token disponível\n      if (!user || !user.accessToken) {\n        console.error(\"Token de autenticação não disponível\");\n        return {\n          error: true,\n          message: \"Token não disponível\"\n        };\n      }\n\n      // Garantir que o token seja incluído no cabeçalho da requisição\n      const response = await axios.get(API_URL + \"perfil\", {\n        headers: {\n          \"x-access-token\": user.accessToken,\n          \"Authorization\": \"Bearer \" + user.accessToken\n        }\n      });\n      return response;\n    } catch (error) {\n      this.logErrorDetails(error);\n      throw error;\n    }\n  }\n  logErrorDetails(error) {\n    console.error(\"Erro ao comunicar com a API:\", error.message);\n    if (error.response) {\n      // O servidor respondeu com status fora do intervalo 2xx\n      console.error(\"Status:\", error.response.status);\n      console.error(\"Dados:\", error.response.data);\n      console.error(\"Headers:\", error.response.headers);\n    } else if (error.request) {\n      // A requisição foi feita mas não houve resposta\n      console.error(\"Sem resposta do servidor. Requisição:\", error.request);\n    } else {\n      // Algo aconteceu na configuração da requisição\n      console.error(\"Erro de configuração:\", error.message);\n    }\n    console.error(\"Config completa:\", error.config);\n  }\n\n  // Atualizar perfil do cliente\n  async updateClienteProfile(clienteData) {\n    this.refreshAuth(); // Garante que o token está atualizado\n    console.log(\"Atualizando perfil, dados:\", clienteData);\n    return axios.put(`${API_URL}/cliente/perfil`, clienteData, {\n      headers: this.authHeader\n    });\n  }\n\n  // Obter histórico de consultas do cliente\n  async getConsultas() {\n    this.refreshAuth(); // Garante que o token está atualizado\n    return axios.get(`${API_URL}/cliente/consultas`, {\n      headers: this.authHeader\n    });\n  }\n}\nexport default new ClienteService();","map":{"version":3,"names":["axios","AuthService","API_URL","process","env","REACT_APP_API_URL","ClienteService","constructor","refreshAuth","user","getCurrentUser","token","accessToken","authHeader","Authorization","console","log","getClienteProfile","error","message","response","get","headers","logErrorDetails","status","data","request","config","updateClienteProfile","clienteData","put","getConsultas"],"sources":["C:/Users/s0ares/clinicadentaria_ai2/client/src/services/cliente.service.js"],"sourcesContent":["import axios from 'axios';\r\nimport AuthService from './auth.service';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\r\n\r\nclass ClienteService {\r\n  constructor() {\r\n    this.refreshAuth();\r\n  }\r\n  \r\n  refreshAuth() {\r\n    const user = AuthService.getCurrentUser();\r\n    this.token = user?.accessToken;\r\n    this.authHeader = this.token \r\n      ? { Authorization: `Bearer ${this.token}` } \r\n      : {};\r\n    \r\n    console.log(\"ClienteService - Token disponível:\", this.token ? \"Sim\" : \"Não\");\r\n  }\r\n\r\n  async getClienteProfile() {\r\n    try {\r\n      console.log(\"Buscando perfil do cliente em: \" + API_URL + \"perfil\");\r\n      const user = AuthService.getCurrentUser();\r\n      \r\n      // Verificar se temos o token disponível\r\n      if (!user || !user.accessToken) {\r\n        console.error(\"Token de autenticação não disponível\");\r\n        return { error: true, message: \"Token não disponível\" };\r\n      }\r\n\r\n      // Garantir que o token seja incluído no cabeçalho da requisição\r\n      const response = await axios.get(API_URL + \"perfil\", {\r\n        headers: {\r\n          \"x-access-token\": user.accessToken,\r\n          \"Authorization\": \"Bearer \" + user.accessToken\r\n        }\r\n      });\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      this.logErrorDetails(error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  logErrorDetails(error) {\r\n    console.error(\"Erro ao comunicar com a API:\", error.message);\r\n    \r\n    if (error.response) {\r\n      // O servidor respondeu com status fora do intervalo 2xx\r\n      console.error(\"Status:\", error.response.status);\r\n      console.error(\"Dados:\", error.response.data);\r\n      console.error(\"Headers:\", error.response.headers);\r\n    } else if (error.request) {\r\n      // A requisição foi feita mas não houve resposta\r\n      console.error(\"Sem resposta do servidor. Requisição:\", error.request);\r\n    } else {\r\n      // Algo aconteceu na configuração da requisição\r\n      console.error(\"Erro de configuração:\", error.message);\r\n    }\r\n    \r\n    console.error(\"Config completa:\", error.config);\r\n  }\r\n\r\n  // Atualizar perfil do cliente\r\n  async updateClienteProfile(clienteData) {\r\n    this.refreshAuth(); // Garante que o token está atualizado\r\n    console.log(\"Atualizando perfil, dados:\", clienteData);\r\n    return axios.put(`${API_URL}/cliente/perfil`, clienteData, {\r\n      headers: this.authHeader\r\n    });\r\n  }\r\n\r\n  // Obter histórico de consultas do cliente\r\n  async getConsultas() {\r\n    this.refreshAuth(); // Garante que o token está atualizado\r\n    return axios.get(`${API_URL}/cliente/consultas`, {\r\n      headers: this.authHeader\r\n    });\r\n  }\r\n}\r\n\r\nexport default new ClienteService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}