{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s0ares\\\\clinicadentaria_ai2\\\\client\\\\src\\\\views\\\\cliente\\\\ClienteAgendamentosPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport AuthService from '../../services/auth.service';\nimport authHeader from '../../services/auth-header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n_c = Container;\nconst AppointmentsContainer = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n  padding: 2rem;\n`;\nconst ScheduleContainer = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n  padding: 2rem;\n`;\n_c2 = ScheduleContainer;\nconst SectionTitle = styled.h3`\n  font-size: 1.25rem;\n  color: #2c3e50;\n  margin-bottom: 1.5rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid #ecf0f1;\n`;\n_c3 = SectionTitle;\nconst AppointmentList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\nconst AppointmentItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.25rem;\n  border-radius: 8px;\n  background-color: #f8f9fa;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1rem;\n  }\n  \n  .appointment-info {\n    display: flex;\n    align-items: center;\n    gap: 1.5rem;\n    \n    @media (max-width: 576px) {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n    \n    .date-time {\n      min-width: 100px;\n      text-align: center;\n      \n      .date {\n        font-weight: 600;\n        color: #3498db;\n      }\n      \n      .time {\n        margin-top: 0.25rem;\n        font-size: 0.875rem;\n        color: #7f8c8d;\n      }\n    }\n    \n    .details {\n      .service {\n        font-weight: 500;\n        margin-bottom: 0.25rem;\n      }\n      \n      .notes {\n        font-size: 0.875rem;\n        color: #7f8c8d;\n      }\n    }\n  }\n  \n  .status-actions {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    \n    .status {\n      padding: 0.25rem 0.75rem;\n      border-radius: 50px;\n      font-size: 0.75rem;\n      font-weight: 600;\n      text-transform: uppercase;\n      \n      &.confirmado {\n        background-color: #e8f5e9;\n        color: #2e7d32;\n      }\n      \n      &.pendente {\n        background-color: #fff8e1;\n        color: #f57f17;\n      }\n      \n      &.cancelado {\n        background-color: #ffebee;\n        color: #c62828;\n      }\n    }\n  }\n`;\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem 1rem;\n  text-align: center;\n  \n  i {\n    font-size: 3rem;\n    color: #bdc3c7;\n    margin-bottom: 1rem;\n  }\n  \n  h3 {\n    font-size: 1.25rem;\n    margin-bottom: 0.5rem;\n    color: #2c3e50;\n  }\n  \n  p {\n    color: #7f8c8d;\n    margin-bottom: 1.5rem;\n  }\n`;\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  border: none;\n  \n  background-color: ${props => props.danger ? '#e74c3c' : '#3498db'};\n  color: white;\n  \n  &:hover {\n    background-color: ${props => props.danger ? '#c0392b' : '#2980b9'};\n  }\n`;\n_c4 = Button;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  max-width: 600px;\n  margin: 0 auto;\n`;\n_c5 = Form;\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n_c6 = FormGroup;\nconst Label = styled.label`\n  font-weight: 500;\n  color: #2c3e50;\n`;\n_c7 = Label;\nconst Input = styled.input`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n`;\n_c8 = Input;\nconst Select = styled.select`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  background-color: white;\n`;\n_c9 = Select;\nconst TextArea = styled.textarea`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n`;\n_c10 = TextArea;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin-top: 1rem;\n`;\n_c11 = ButtonGroup;\nfunction ClienteAgendamentosPage() {\n  _s();\n  const [agendamentos, setAgendamentos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    dataHora: '',\n    servico: '',\n    observacoes: ''\n  });\n  const [servicos, setServicos] = useState(['Consulta Geral', 'Limpeza Dentária', 'Tratamento de Canal', 'Extração', 'Implante Dentário', 'Ortodontia', 'Clareamento Dental', 'Prótese Dentária']);\n  const [horarios, setHorarios] = useState([]);\n  const [dataAgendamento, setDataAgendamento] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const currentUser = AuthService.getCurrentUser();\n  useEffect(() => {\n    fetchAgendamentos();\n  }, []);\n  useEffect(() => {\n    if (dataAgendamento) {\n      gerarHorariosDisponiveis(dataAgendamento);\n    }\n  }, [dataAgendamento]);\n  const fetchAgendamentos = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_URL}/agendamentos/cliente`, {\n        headers: authHeader()\n      });\n      console.log('Agendamentos recebidos:', response.data);\n      setAgendamentos(response.data || []);\n      setLoading(false);\n    } catch (error) {\n      console.error('Erro ao carregar agendamentos:', error);\n      setAgendamentos([]);\n      setLoading(false);\n    }\n  };\n  const gerarHorariosDisponiveis = async data => {\n    try {\n      // Em um cenário real, buscaríamos os horários disponíveis da API\n      // Por enquanto, vamos gerar horários fictícios\n      const horariosDisponiveis = [];\n      const dataObj = new Date(data);\n\n      // Verificar se é fim de semana\n      const diaSemana = dataObj.getDay();\n      if (diaSemana === 0 || diaSemana === 6) {\n        // Sábado ou domingo\n        for (let hora = 9; hora <= 12; hora++) {\n          horariosDisponiveis.push(`${hora}:00`);\n          if (hora < 12) horariosDisponiveis.push(`${hora}:30`);\n        }\n      } else {\n        // Dia de semana\n        for (let hora = 9; hora <= 18; hora++) {\n          if (hora !== 13) {\n            // Excluir horário de almoço\n            horariosDisponiveis.push(`${hora}:00`);\n            if (hora < 18) horariosDisponiveis.push(`${hora}:30`);\n          }\n        }\n      }\n\n      // Em um cenário real, verificaríamos quais horários já estão ocupados\n      // e os removeríamos da lista\n      setHorarios(horariosDisponiveis);\n    } catch (error) {\n      console.error('Erro ao gerar horários disponíveis:', error);\n      toast.error('Erro ao carregar horários disponíveis');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'data') {\n      setDataAgendamento(value);\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!dataAgendamento || !formData.hora || !formData.servico) {\n      toast.error('Por favor, preencha todos os campos obrigatórios');\n      return;\n    }\n    try {\n      setSubmitting(true);\n\n      // Combinar data e hora\n      const dataHora = new Date(`${dataAgendamento}T${formData.hora}`);\n      const agendamentoData = {\n        dataHora: dataHora.toISOString(),\n        servico: formData.servico,\n        observacoes: formData.observacoes,\n        estado: 'Pendente'\n      };\n      await axios.post(`${API_URL}/agendamentos`, agendamentoData, {\n        headers: authHeader()\n      });\n      toast.success('Consulta agendada com sucesso!');\n\n      // Limpar formulário\n      setFormData({\n        dataHora: '',\n        servico: '',\n        observacoes: ''\n      });\n      setDataAgendamento('');\n\n      // Atualizar lista de agendamentos\n      fetchAgendamentos();\n      setSubmitting(false);\n    } catch (error) {\n      console.error('Erro ao agendar consulta:', error);\n      toast.error('Erro ao agendar consulta. Por favor, tente novamente.');\n      setSubmitting(false);\n    }\n  };\n  const handleCancelAppointment = async id => {\n    if (window.confirm('Tem certeza que deseja cancelar este agendamento?')) {\n      try {\n        await axios.put(`${API_URL}/agendamentos/${id}/cancelar`, {}, {\n          headers: authHeader()\n        });\n        toast.success('Agendamento cancelado com sucesso');\n        fetchAgendamentos();\n      } catch (error) {\n        console.error('Erro ao cancelar agendamento:', error);\n        toast.error('Erro ao cancelar agendamento');\n      }\n    }\n  };\n  const getStatusClass = status => {\n    if (!status) return '';\n    console.log('Status recebido:', status);\n    switch (status.toLowerCase()) {\n      case 'confirmado':\n        return 'confirmado';\n      case 'pendente':\n        return 'pendente';\n      case 'cancelado':\n        return 'cancelado';\n      default:\n        return '';\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('pt-PT');\n  };\n  const formatTime = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString('pt-PT', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Calcular a data mínima (hoje)\n  const today = new Date().toISOString().split('T')[0];\n\n  // Calcular a data máxima (3 meses a partir de hoje)\n  const maxDate = new Date();\n  maxDate.setMonth(maxDate.getMonth() + 3);\n  const maxDateString = maxDate.toISOString().split('T')[0];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(ScheduleContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"Agendar Nova Consulta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"data\",\n            children: \"Data *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"date\",\n            id: \"data\",\n            name: \"data\",\n            value: dataAgendamento,\n            onChange: handleInputChange,\n            min: today,\n            max: maxDateString,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"hora\",\n            children: \"Hor\\xE1rio *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"hora\",\n            name: \"hora\",\n            value: formData.hora || '',\n            onChange: handleInputChange,\n            required: true,\n            disabled: !dataAgendamento,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione um hor\\xE1rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), horarios.map(horario => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: horario,\n              children: horario\n            }, horario, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"servico\",\n            children: \"Servi\\xE7o *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"servico\",\n            name: \"servico\",\n            value: formData.servico,\n            onChange: handleInputChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione um servi\\xE7o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), servicos.map(servico => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: servico,\n              children: servico\n            }, servico, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"observacoes\",\n            children: \"Observa\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            id: \"observacoes\",\n            name: \"observacoes\",\n            value: formData.observacoes,\n            onChange: handleInputChange,\n            placeholder: \"Descreva qualquer informa\\xE7\\xE3o adicional relevante para a consulta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: submitting,\n            children: submitting ? 'Agendando...' : 'Agendar Consulta'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 416,\n    columnNumber: 5\n  }, this);\n}\n_s(ClienteAgendamentosPage, \"WvRYl3OOlkOkQ7Igwa6PVseVsBU=\");\n_c12 = ClienteAgendamentosPage;\nexport default ClienteAgendamentosPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ScheduleContainer\");\n$RefreshReg$(_c3, \"SectionTitle\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"Form\");\n$RefreshReg$(_c6, \"FormGroup\");\n$RefreshReg$(_c7, \"Label\");\n$RefreshReg$(_c8, \"Input\");\n$RefreshReg$(_c9, \"Select\");\n$RefreshReg$(_c10, \"TextArea\");\n$RefreshReg$(_c11, \"ButtonGroup\");\n$RefreshReg$(_c12, \"ClienteAgendamentosPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","axios","toast","AuthService","authHeader","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","Container","div","_c","AppointmentsContainer","ScheduleContainer","_c2","SectionTitle","h3","_c3","AppointmentList","AppointmentItem","EmptyState","Button","button","props","danger","_c4","Form","form","_c5","FormGroup","_c6","Label","label","_c7","Input","input","_c8","Select","select","_c9","TextArea","textarea","_c10","ButtonGroup","_c11","ClienteAgendamentosPage","_s","agendamentos","setAgendamentos","loading","setLoading","formData","setFormData","dataHora","servico","observacoes","servicos","setServicos","horarios","setHorarios","dataAgendamento","setDataAgendamento","submitting","setSubmitting","currentUser","getCurrentUser","fetchAgendamentos","gerarHorariosDisponiveis","response","get","headers","console","log","data","error","horariosDisponiveis","dataObj","Date","diaSemana","getDay","hora","push","handleInputChange","e","name","value","target","handleSubmit","preventDefault","agendamentoData","toISOString","estado","post","success","handleCancelAppointment","id","window","confirm","put","getStatusClass","status","toLowerCase","formatDate","dateString","date","toLocaleDateString","formatTime","toLocaleTimeString","hour","minute","today","split","maxDate","setMonth","getMonth","maxDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","min","max","required","disabled","map","horario","placeholder","_c12","$RefreshReg$"],"sources":["C:/Users/s0ares/clinicadentaria_ai2/client/src/views/cliente/ClienteAgendamentosPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport AuthService from '../../services/auth.service';\nimport authHeader from '../../services/auth-header';\n\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst AppointmentsContainer = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n  padding: 2rem;\n`;\n\nconst ScheduleContainer = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n  padding: 2rem;\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.25rem;\n  color: #2c3e50;\n  margin-bottom: 1.5rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid #ecf0f1;\n`;\n\nconst AppointmentList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst AppointmentItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.25rem;\n  border-radius: 8px;\n  background-color: #f8f9fa;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1rem;\n  }\n  \n  .appointment-info {\n    display: flex;\n    align-items: center;\n    gap: 1.5rem;\n    \n    @media (max-width: 576px) {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n    \n    .date-time {\n      min-width: 100px;\n      text-align: center;\n      \n      .date {\n        font-weight: 600;\n        color: #3498db;\n      }\n      \n      .time {\n        margin-top: 0.25rem;\n        font-size: 0.875rem;\n        color: #7f8c8d;\n      }\n    }\n    \n    .details {\n      .service {\n        font-weight: 500;\n        margin-bottom: 0.25rem;\n      }\n      \n      .notes {\n        font-size: 0.875rem;\n        color: #7f8c8d;\n      }\n    }\n  }\n  \n  .status-actions {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    \n    .status {\n      padding: 0.25rem 0.75rem;\n      border-radius: 50px;\n      font-size: 0.75rem;\n      font-weight: 600;\n      text-transform: uppercase;\n      \n      &.confirmado {\n        background-color: #e8f5e9;\n        color: #2e7d32;\n      }\n      \n      &.pendente {\n        background-color: #fff8e1;\n        color: #f57f17;\n      }\n      \n      &.cancelado {\n        background-color: #ffebee;\n        color: #c62828;\n      }\n    }\n  }\n`;\n\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem 1rem;\n  text-align: center;\n  \n  i {\n    font-size: 3rem;\n    color: #bdc3c7;\n    margin-bottom: 1rem;\n  }\n  \n  h3 {\n    font-size: 1.25rem;\n    margin-bottom: 0.5rem;\n    color: #2c3e50;\n  }\n  \n  p {\n    color: #7f8c8d;\n    margin-bottom: 1.5rem;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  border: none;\n  \n  background-color: ${props => props.danger ? '#e74c3c' : '#3498db'};\n  color: white;\n  \n  &:hover {\n    background-color: ${props => props.danger ? '#c0392b' : '#2980b9'};\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n  color: #2c3e50;\n`;\n\nconst Input = styled.input`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n`;\n\nconst Select = styled.select`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  background-color: white;\n`;\n\nconst TextArea = styled.textarea`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin-top: 1rem;\n`;\n\nfunction ClienteAgendamentosPage() {\n  const [agendamentos, setAgendamentos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    dataHora: '',\n    servico: '',\n    observacoes: ''\n  });\n  const [servicos, setServicos] = useState([\n    'Consulta Geral',\n    'Limpeza Dentária',\n    'Tratamento de Canal',\n    'Extração',\n    'Implante Dentário',\n    'Ortodontia',\n    'Clareamento Dental',\n    'Prótese Dentária'\n  ]);\n  const [horarios, setHorarios] = useState([]);\n  const [dataAgendamento, setDataAgendamento] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  \n  const currentUser = AuthService.getCurrentUser();\n\n  useEffect(() => {\n    fetchAgendamentos();\n  }, []);\n\n  useEffect(() => {\n    if (dataAgendamento) {\n      gerarHorariosDisponiveis(dataAgendamento);\n    }\n  }, [dataAgendamento]);\n\n  const fetchAgendamentos = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_URL}/agendamentos/cliente`, { \n        headers: authHeader()\n      });\n      console.log('Agendamentos recebidos:', response.data);\n      setAgendamentos(response.data || []);\n      setLoading(false);\n    } catch (error) {\n      console.error('Erro ao carregar agendamentos:', error);\n      setAgendamentos([]);\n      setLoading(false);\n    }\n  };\n\n  const gerarHorariosDisponiveis = async (data) => {\n    try {\n      // Em um cenário real, buscaríamos os horários disponíveis da API\n      // Por enquanto, vamos gerar horários fictícios\n      const horariosDisponiveis = [];\n      const dataObj = new Date(data);\n      \n      // Verificar se é fim de semana\n      const diaSemana = dataObj.getDay();\n      if (diaSemana === 0 || diaSemana === 6) {\n        // Sábado ou domingo\n        for (let hora = 9; hora <= 12; hora++) {\n          horariosDisponiveis.push(`${hora}:00`);\n          if (hora < 12) horariosDisponiveis.push(`${hora}:30`);\n        }\n      } else {\n        // Dia de semana\n        for (let hora = 9; hora <= 18; hora++) {\n          if (hora !== 13) { // Excluir horário de almoço\n            horariosDisponiveis.push(`${hora}:00`);\n            if (hora < 18) horariosDisponiveis.push(`${hora}:30`);\n          }\n        }\n      }\n      \n      // Em um cenário real, verificaríamos quais horários já estão ocupados\n      // e os removeríamos da lista\n      setHorarios(horariosDisponiveis);\n    } catch (error) {\n      console.error('Erro ao gerar horários disponíveis:', error);\n      toast.error('Erro ao carregar horários disponíveis');\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    if (name === 'data') {\n      setDataAgendamento(value);\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!dataAgendamento || !formData.hora || !formData.servico) {\n      toast.error('Por favor, preencha todos os campos obrigatórios');\n      return;\n    }\n    \n    try {\n      setSubmitting(true);\n      \n      // Combinar data e hora\n      const dataHora = new Date(`${dataAgendamento}T${formData.hora}`);\n      \n      const agendamentoData = {\n        dataHora: dataHora.toISOString(),\n        servico: formData.servico,\n        observacoes: formData.observacoes,\n        estado: 'Pendente'\n      };\n      \n      await axios.post(\n        `${API_URL}/agendamentos`, \n        agendamentoData,\n        { headers: authHeader() }\n      );\n      \n      toast.success('Consulta agendada com sucesso!');\n      \n      // Limpar formulário\n      setFormData({\n        dataHora: '',\n        servico: '',\n        observacoes: ''\n      });\n      setDataAgendamento('');\n      \n      // Atualizar lista de agendamentos\n      fetchAgendamentos();\n      setSubmitting(false);\n    } catch (error) {\n      console.error('Erro ao agendar consulta:', error);\n      toast.error('Erro ao agendar consulta. Por favor, tente novamente.');\n      setSubmitting(false);\n    }\n  };\n\n  const handleCancelAppointment = async (id) => {\n    if (window.confirm('Tem certeza que deseja cancelar este agendamento?')) {\n      try {\n        await axios.put(\n          `${API_URL}/agendamentos/${id}/cancelar`, \n          {}, \n          { headers: authHeader() }\n        );\n        toast.success('Agendamento cancelado com sucesso');\n        fetchAgendamentos();\n      } catch (error) {\n        console.error('Erro ao cancelar agendamento:', error);\n        toast.error('Erro ao cancelar agendamento');\n      }\n    }\n  };\n\n  const getStatusClass = (status) => {\n    if (!status) return '';\n    \n    console.log('Status recebido:', status);\n    \n    switch (status.toLowerCase()) {\n      case 'confirmado':\n        return 'confirmado';\n      case 'pendente':\n        return 'pendente';\n      case 'cancelado':\n        return 'cancelado';\n      default:\n        return '';\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('pt-PT');\n  };\n\n  const formatTime = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString('pt-PT', { hour: '2-digit', minute: '2-digit' });\n  };\n\n  // Calcular a data mínima (hoje)\n  const today = new Date().toISOString().split('T')[0];\n  \n  // Calcular a data máxima (3 meses a partir de hoje)\n  const maxDate = new Date();\n  maxDate.setMonth(maxDate.getMonth() + 3);\n  const maxDateString = maxDate.toISOString().split('T')[0];\n\n  return (\n    <Container>\n      <ScheduleContainer>\n        <SectionTitle>Agendar Nova Consulta</SectionTitle>\n        \n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label htmlFor=\"data\">Data *</Label>\n            <Input \n              type=\"date\" \n              id=\"data\" \n              name=\"data\"\n              value={dataAgendamento}\n              onChange={handleInputChange}\n              min={today}\n              max={maxDateString}\n              required\n            />\n          </FormGroup>\n          \n          <FormGroup>\n            <Label htmlFor=\"hora\">Horário *</Label>\n            <Select \n              id=\"hora\" \n              name=\"hora\"\n              value={formData.hora || ''}\n              onChange={handleInputChange}\n              required\n              disabled={!dataAgendamento}\n            >\n              <option value=\"\">Selecione um horário</option>\n              {horarios.map(horario => (\n                <option key={horario} value={horario}>\n                  {horario}\n                </option>\n              ))}\n            </Select>\n          </FormGroup>\n          \n          <FormGroup>\n            <Label htmlFor=\"servico\">Serviço *</Label>\n            <Select \n              id=\"servico\" \n              name=\"servico\"\n              value={formData.servico}\n              onChange={handleInputChange}\n              required\n            >\n              <option value=\"\">Selecione um serviço</option>\n              {servicos.map(servico => (\n                <option key={servico} value={servico}>\n                  {servico}\n                </option>\n              ))}\n            </Select>\n          </FormGroup>\n          \n          <FormGroup>\n            <Label htmlFor=\"observacoes\">Observações</Label>\n            <TextArea \n              id=\"observacoes\" \n              name=\"observacoes\"\n              value={formData.observacoes}\n              onChange={handleInputChange}\n              placeholder=\"Descreva qualquer informação adicional relevante para a consulta\"\n            />\n          </FormGroup>\n          \n          <ButtonGroup>\n            <Button type=\"submit\" disabled={submitting}>\n              {submitting ? 'Agendando...' : 'Agendar Consulta'}\n            </Button>\n          </ButtonGroup>\n        </Form>\n      </ScheduleContainer>\n    </Container>\n  );\n}\n\nexport default ClienteAgendamentosPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,SAAS,GAAGX,MAAM,CAACY,GAAG;AAC5B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,SAAS;AAMf,MAAMG,qBAAqB,GAAGd,MAAM,CAACY,GAAG;AACxC;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMG,iBAAiB,GAAGf,MAAM,CAACY,GAAG;AACpC;AACA;AACA;AACA;AACA,CAAC;AAACI,GAAA,GALID,iBAAiB;AAOvB,MAAME,YAAY,GAAGjB,MAAM,CAACkB,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,YAAY;AAQlB,MAAMG,eAAe,GAAGpB,MAAM,CAACY,GAAG;AAClC;AACA;AACA;AACA,CAAC;AAED,MAAMS,eAAe,GAAGrB,MAAM,CAACY,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMU,UAAU,GAAGtB,MAAM,CAACY,GAAG;AAC7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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}