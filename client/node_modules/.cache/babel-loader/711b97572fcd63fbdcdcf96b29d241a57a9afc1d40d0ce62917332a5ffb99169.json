{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s0ares\\\\clinicadentaria_ai2\\\\client\\\\src\\\\views\\\\cliente\\\\ClienteNovoAgendamentoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport AuthService from '../../services/auth.service';\nimport authHeader from '../../services/auth-header';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000/api\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n_c = Container;\nconst ScheduleContainer = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n  padding: 2rem;\n`;\n_c2 = ScheduleContainer;\nconst SectionTitle = styled.h3`\n  font-size: 1.25rem;\n  color: #2c3e50;\n  margin-bottom: 1.5rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid #ecf0f1;\n`;\n_c3 = SectionTitle;\nconst Form = styled.form`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 1.5rem;\n`;\n_c4 = Form;\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n`;\n_c5 = FormGroup;\nconst Label = styled.label`\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  color: #2c3e50;\n`;\n_c6 = Label;\nconst Input = styled.input`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  \n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\n  }\n  \n  &:disabled {\n    background-color: #f8f9fa;\n    cursor: not-allowed;\n  }\n`;\n_c7 = Input;\nconst Select = styled.select`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  background-color: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\n  }\n  \n  &:disabled {\n    background-color: #f8f9fa;\n    cursor: not-allowed;\n  }\n`;\n_c8 = Select;\nconst TextArea = styled.textarea`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n  \n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\n  }\n`;\n_c9 = TextArea;\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  grid-column: 1 / -1;\n  margin-top: 1rem;\n`;\n_c10 = ButtonGroup;\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  background-color: ${props => props.secondary ? '#ecf0f1' : props.danger ? '#e74c3c' : '#3498db'};\n  color: ${props => props.secondary ? '#2c3e50' : 'white'};\n  border: none;\n  border-radius: 4px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s;\n  \n  &:hover {\n    background-color: ${props => props.secondary ? '#dfe6e9' : props.danger ? '#c0392b' : '#2980b9'};\n  }\n  \n  &:disabled {\n    background-color: #bdc3c7;\n    cursor: not-allowed;\n  }\n  \n  & + & {\n    margin-left: 1rem;\n  }\n`;\n_c11 = Button;\nconst InfoBox = styled.div`\n  background-color: #f8f9fa;\n  border-left: 4px solid #3498db;\n  padding: 1rem;\n  margin-bottom: 1.5rem;\n  border-radius: 4px;\n  grid-column: 1 / -1;\n  \n  p {\n    margin: 0;\n    color: #2c3e50;\n  }\n`;\n_c12 = InfoBox;\nfunction ClienteNovoAgendamentoPage() {\n  _s();\n  const [formData, setFormData] = useState({\n    dataHora: '',\n    servico: '',\n    observacoes: '',\n    hora: ''\n  });\n  const [servicos, setServicos] = useState(['Consulta Geral', 'Limpeza Dentária', 'Tratamento de Canal', 'Extração', 'Implante Dentário', 'Ortodontia', 'Clareamento Dental', 'Prótese Dentária']);\n  const [horarios, setHorarios] = useState([]);\n  const [dataAgendamento, setDataAgendamento] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Verificar se o usuário está autenticado\n    const user = JSON.parse(localStorage.getItem('user'));\n    console.log('User data from localStorage:', user);\n    if (!user || !user.accessToken) {\n      navigate('/login');\n      return;\n    }\n\n    // Carregar serviços disponíveis\n    loadServicos();\n  }, [navigate]);\n  useEffect(() => {\n    if (dataAgendamento) {\n      gerarHorariosDisponiveis(dataAgendamento);\n    }\n  }, [dataAgendamento]);\n  const loadServicos = async () => {\n    try {\n      // Em um cenário real, buscaríamos os serviços da API\n      // Por enquanto, usamos os serviços definidos estaticamente\n      console.log('Serviços carregados:', servicos);\n      // Se quisermos buscar da API no futuro:\n      // const response = await axios.get(`${API_URL}/servicos`, { headers: authHeader() });\n      // setServicos(response.data);\n    } catch (error) {\n      console.error('Erro ao carregar serviços:', error);\n      toast.error('Erro ao carregar serviços disponíveis');\n    }\n  };\n  const gerarHorariosDisponiveis = async data => {\n    try {\n      // Em um cenário real, buscaríamos os horários disponíveis da API\n      // Por enquanto, vamos gerar horários fictícios\n      const horariosDisponiveis = [];\n      const dataObj = new Date(data);\n\n      // Verificar se é fim de semana\n      const diaSemana = dataObj.getDay();\n      if (diaSemana === 0 || diaSemana === 6) {\n        // Sábado ou domingo\n        for (let hora = 9; hora <= 12; hora++) {\n          horariosDisponiveis.push(`${hora}:00`);\n          if (hora < 12) horariosDisponiveis.push(`${hora}:30`);\n        }\n      } else {\n        // Dia de semana\n        for (let hora = 9; hora <= 18; hora++) {\n          if (hora !== 13) {\n            // Excluir horário de almoço\n            horariosDisponiveis.push(`${hora}:00`);\n            if (hora < 18) horariosDisponiveis.push(`${hora}:30`);\n          }\n        }\n      }\n\n      // Em um cenário real, verificaríamos quais horários já estão ocupados\n      // e os removeríamos da lista\n      setHorarios(horariosDisponiveis);\n    } catch (error) {\n      console.error('Erro ao gerar horários disponíveis:', error);\n      toast.error('Erro ao carregar horários disponíveis');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'data') {\n      setDataAgendamento(value);\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!dataAgendamento || !formData.hora || !formData.servico) {\n      toast.error('Por favor, preencha todos os campos obrigatórios');\n      return;\n    }\n    try {\n      setSubmitting(true);\n\n      // Combinar data e hora\n      const dataHora = new Date(`${dataAgendamento}T${formData.hora}`);\n      const agendamentoData = {\n        dataHora: dataHora.toISOString(),\n        servico: formData.servico,\n        observacoes: formData.observacoes,\n        estado: 'Pendente'\n      };\n      console.log('Enviando agendamento:', agendamentoData);\n      console.log('Headers:', authHeader());\n      try {\n        const response = await axios.post(`${API_URL}/agendamentos`, agendamentoData, {\n          headers: authHeader()\n        });\n        console.log('Resposta do servidor:', response.data);\n        toast.success('Consulta agendada com sucesso!');\n\n        // Limpar formulário\n        setFormData({\n          dataHora: '',\n          servico: '',\n          observacoes: '',\n          hora: ''\n        });\n        setDataAgendamento('');\n\n        // Redirecionar para a página de agendamentos\n        navigate('/cliente-dashboard/agendamentos');\n      } catch (axiosError) {\n        console.error('Erro do Axios:', axiosError);\n        if (axiosError.response) {\n          console.error('Resposta de erro:', axiosError.response.data);\n          toast.error(`Erro ao agendar consulta: ${axiosError.response.data.message || 'Erro desconhecido'}`);\n        } else if (axiosError.request) {\n          console.error('Sem resposta:', axiosError.request);\n          toast.error('Erro ao conectar com o servidor. Verifique sua conexão.');\n        } else {\n          console.error('Erro de configuração:', axiosError.message);\n          toast.error(`Erro ao configurar requisição: ${axiosError.message}`);\n        }\n      }\n      setSubmitting(false);\n    } catch (error) {\n      console.error('Erro geral ao agendar consulta:', error);\n      toast.error('Erro ao agendar consulta. Por favor, tente novamente.');\n      setSubmitting(false);\n    }\n  };\n\n  // Calcular a data mínima (hoje)\n  const today = new Date().toISOString().split('T')[0];\n\n  // Calcular a data máxima (3 meses a partir de hoje)\n  const maxDate = new Date();\n  maxDate.setMonth(maxDate.getMonth() + 3);\n  const maxDateString = maxDate.toISOString().split('T')[0];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(ScheduleContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"Agendar Nova Consulta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Selecione a data, hor\\xE1rio e o servi\\xE7o desejado para agendar sua consulta. Ap\\xF3s o agendamento, nossa equipe entrar\\xE1 em contato para confirmar.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"data\",\n            children: \"Data *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"date\",\n            id: \"data\",\n            name: \"data\",\n            value: dataAgendamento,\n            onChange: handleInputChange,\n            min: today,\n            max: maxDateString,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"hora\",\n            children: \"Hor\\xE1rio *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"hora\",\n            name: \"hora\",\n            value: formData.hora || '',\n            onChange: handleInputChange,\n            required: true,\n            disabled: !dataAgendamento,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione um hor\\xE1rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this), horarios.map(horario => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: horario,\n              children: horario\n            }, horario, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"servico\",\n            children: \"Servi\\xE7o *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"servico\",\n            name: \"servico\",\n            value: formData.servico,\n            onChange: handleInputChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione um servi\\xE7o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), servicos.map(servico => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: servico,\n              children: servico\n            }, servico, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          style: {\n            gridColumn: '1 / -1'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"observacoes\",\n            children: \"Observa\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            id: \"observacoes\",\n            name: \"observacoes\",\n            value: formData.observacoes,\n            onChange: handleInputChange,\n            placeholder: \"Descreva qualquer informa\\xE7\\xE3o adicional relevante para a consulta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            secondary: true,\n            onClick: () => navigate('/cliente-dashboard/agendamentos'),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: submitting,\n            children: submitting ? 'Agendando...' : 'Agendar Consulta'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n}\n_s(ClienteNovoAgendamentoPage, \"hIyiP4yYDTcAnjJ518jEw2hcIbI=\", false, function () {\n  return [useNavigate];\n});\n_c13 = ClienteNovoAgendamentoPage;\nexport default ClienteNovoAgendamentoPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ScheduleContainer\");\n$RefreshReg$(_c3, \"SectionTitle\");\n$RefreshReg$(_c4, \"Form\");\n$RefreshReg$(_c5, \"FormGroup\");\n$RefreshReg$(_c6, \"Label\");\n$RefreshReg$(_c7, \"Input\");\n$RefreshReg$(_c8, \"Select\");\n$RefreshReg$(_c9, \"TextArea\");\n$RefreshReg$(_c10, \"ButtonGroup\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"InfoBox\");\n$RefreshReg$(_c13, \"ClienteNovoAgendamentoPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","axios","toast","AuthService","authHeader","useNavigate","jsxDEV","_jsxDEV","API_URL","Container","div","_c","ScheduleContainer","_c2","SectionTitle","h3","_c3","Form","form","_c4","FormGroup","_c5","Label","label","_c6","Input","input","_c7","Select","select","_c8","TextArea","textarea","_c9","ButtonGroup","_c10","Button","button","props","secondary","danger","_c11","InfoBox","_c12","ClienteNovoAgendamentoPage","_s","formData","setFormData","dataHora","servico","observacoes","hora","servicos","setServicos","horarios","setHorarios","dataAgendamento","setDataAgendamento","submitting","setSubmitting","navigate","user","JSON","parse","localStorage","getItem","console","log","accessToken","loadServicos","gerarHorariosDisponiveis","error","data","horariosDisponiveis","dataObj","Date","diaSemana","getDay","push","handleInputChange","e","name","value","target","handleSubmit","preventDefault","agendamentoData","toISOString","estado","response","post","headers","success","axiosError","message","request","today","split","maxDate","setMonth","getMonth","maxDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","min","max","required","disabled","map","horario","style","gridColumn","placeholder","onClick","_c13","$RefreshReg$"],"sources":["C:/Users/s0ares/clinicadentaria_ai2/client/src/views/cliente/ClienteNovoAgendamentoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport AuthService from '../../services/auth.service';\nimport authHeader from '../../services/auth-header';\nimport { useNavigate } from 'react-router-dom';\n\nconst API_URL = \"http://localhost:5000/api\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst ScheduleContainer = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n  padding: 2rem;\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.25rem;\n  color: #2c3e50;\n  margin-bottom: 1.5rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid #ecf0f1;\n`;\n\nconst Form = styled.form`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 1.5rem;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n  color: #2c3e50;\n`;\n\nconst Input = styled.input`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  \n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\n  }\n  \n  &:disabled {\n    background-color: #f8f9fa;\n    cursor: not-allowed;\n  }\n`;\n\nconst Select = styled.select`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  background-color: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\n  }\n  \n  &:disabled {\n    background-color: #f8f9fa;\n    cursor: not-allowed;\n  }\n`;\n\nconst TextArea = styled.textarea`\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n  \n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  grid-column: 1 / -1;\n  margin-top: 1rem;\n`;\n\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  background-color: ${props => props.secondary ? '#ecf0f1' : props.danger ? '#e74c3c' : '#3498db'};\n  color: ${props => props.secondary ? '#2c3e50' : 'white'};\n  border: none;\n  border-radius: 4px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s;\n  \n  &:hover {\n    background-color: ${props => props.secondary ? '#dfe6e9' : props.danger ? '#c0392b' : '#2980b9'};\n  }\n  \n  &:disabled {\n    background-color: #bdc3c7;\n    cursor: not-allowed;\n  }\n  \n  & + & {\n    margin-left: 1rem;\n  }\n`;\n\nconst InfoBox = styled.div`\n  background-color: #f8f9fa;\n  border-left: 4px solid #3498db;\n  padding: 1rem;\n  margin-bottom: 1.5rem;\n  border-radius: 4px;\n  grid-column: 1 / -1;\n  \n  p {\n    margin: 0;\n    color: #2c3e50;\n  }\n`;\n\nfunction ClienteNovoAgendamentoPage() {\n  const [formData, setFormData] = useState({\n    dataHora: '',\n    servico: '',\n    observacoes: '',\n    hora: ''\n  });\n  const [servicos, setServicos] = useState([\n    'Consulta Geral',\n    'Limpeza Dentária',\n    'Tratamento de Canal',\n    'Extração',\n    'Implante Dentário',\n    'Ortodontia',\n    'Clareamento Dental',\n    'Prótese Dentária'\n  ]);\n  const [horarios, setHorarios] = useState([]);\n  const [dataAgendamento, setDataAgendamento] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    // Verificar se o usuário está autenticado\n    const user = JSON.parse(localStorage.getItem('user'));\n    console.log('User data from localStorage:', user);\n    \n    if (!user || !user.accessToken) {\n      navigate('/login');\n      return;\n    }\n    \n    // Carregar serviços disponíveis\n    loadServicos();\n  }, [navigate]);\n\n  useEffect(() => {\n    if (dataAgendamento) {\n      gerarHorariosDisponiveis(dataAgendamento);\n    }\n  }, [dataAgendamento]);\n\n  const loadServicos = async () => {\n    try {\n      // Em um cenário real, buscaríamos os serviços da API\n      // Por enquanto, usamos os serviços definidos estaticamente\n      console.log('Serviços carregados:', servicos);\n      // Se quisermos buscar da API no futuro:\n      // const response = await axios.get(`${API_URL}/servicos`, { headers: authHeader() });\n      // setServicos(response.data);\n    } catch (error) {\n      console.error('Erro ao carregar serviços:', error);\n      toast.error('Erro ao carregar serviços disponíveis');\n    }\n  };\n\n  const gerarHorariosDisponiveis = async (data) => {\n    try {\n      // Em um cenário real, buscaríamos os horários disponíveis da API\n      // Por enquanto, vamos gerar horários fictícios\n      const horariosDisponiveis = [];\n      const dataObj = new Date(data);\n      \n      // Verificar se é fim de semana\n      const diaSemana = dataObj.getDay();\n      if (diaSemana === 0 || diaSemana === 6) {\n        // Sábado ou domingo\n        for (let hora = 9; hora <= 12; hora++) {\n          horariosDisponiveis.push(`${hora}:00`);\n          if (hora < 12) horariosDisponiveis.push(`${hora}:30`);\n        }\n      } else {\n        // Dia de semana\n        for (let hora = 9; hora <= 18; hora++) {\n          if (hora !== 13) { // Excluir horário de almoço\n            horariosDisponiveis.push(`${hora}:00`);\n            if (hora < 18) horariosDisponiveis.push(`${hora}:30`);\n          }\n        }\n      }\n      \n      // Em um cenário real, verificaríamos quais horários já estão ocupados\n      // e os removeríamos da lista\n      setHorarios(horariosDisponiveis);\n    } catch (error) {\n      console.error('Erro ao gerar horários disponíveis:', error);\n      toast.error('Erro ao carregar horários disponíveis');\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    if (name === 'data') {\n      setDataAgendamento(value);\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!dataAgendamento || !formData.hora || !formData.servico) {\n      toast.error('Por favor, preencha todos os campos obrigatórios');\n      return;\n    }\n    \n    try {\n      setSubmitting(true);\n      \n      // Combinar data e hora\n      const dataHora = new Date(`${dataAgendamento}T${formData.hora}`);\n      \n      const agendamentoData = {\n        dataHora: dataHora.toISOString(),\n        servico: formData.servico,\n        observacoes: formData.observacoes,\n        estado: 'Pendente'\n      };\n      \n      console.log('Enviando agendamento:', agendamentoData);\n      console.log('Headers:', authHeader());\n      \n      try {\n        const response = await axios.post(\n          `${API_URL}/agendamentos`, \n          agendamentoData,\n          { headers: authHeader() }\n        );\n        \n        console.log('Resposta do servidor:', response.data);\n        \n        toast.success('Consulta agendada com sucesso!');\n        \n        // Limpar formulário\n        setFormData({\n          dataHora: '',\n          servico: '',\n          observacoes: '',\n          hora: ''\n        });\n        setDataAgendamento('');\n        \n        // Redirecionar para a página de agendamentos\n        navigate('/cliente-dashboard/agendamentos');\n      } catch (axiosError) {\n        console.error('Erro do Axios:', axiosError);\n        if (axiosError.response) {\n          console.error('Resposta de erro:', axiosError.response.data);\n          toast.error(`Erro ao agendar consulta: ${axiosError.response.data.message || 'Erro desconhecido'}`);\n        } else if (axiosError.request) {\n          console.error('Sem resposta:', axiosError.request);\n          toast.error('Erro ao conectar com o servidor. Verifique sua conexão.');\n        } else {\n          console.error('Erro de configuração:', axiosError.message);\n          toast.error(`Erro ao configurar requisição: ${axiosError.message}`);\n        }\n      }\n      \n      setSubmitting(false);\n    } catch (error) {\n      console.error('Erro geral ao agendar consulta:', error);\n      toast.error('Erro ao agendar consulta. Por favor, tente novamente.');\n      setSubmitting(false);\n    }\n  };\n\n  // Calcular a data mínima (hoje)\n  const today = new Date().toISOString().split('T')[0];\n  \n  // Calcular a data máxima (3 meses a partir de hoje)\n  const maxDate = new Date();\n  maxDate.setMonth(maxDate.getMonth() + 3);\n  const maxDateString = maxDate.toISOString().split('T')[0];\n\n  return (\n    <Container>\n      <ScheduleContainer>\n        <SectionTitle>Agendar Nova Consulta</SectionTitle>\n        \n        <InfoBox>\n          <p>Selecione a data, horário e o serviço desejado para agendar sua consulta. Após o agendamento, nossa equipe entrará em contato para confirmar.</p>\n        </InfoBox>\n        \n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label htmlFor=\"data\">Data *</Label>\n            <Input \n              type=\"date\" \n              id=\"data\" \n              name=\"data\"\n              value={dataAgendamento}\n              onChange={handleInputChange}\n              min={today}\n              max={maxDateString}\n              required\n            />\n          </FormGroup>\n          \n          <FormGroup>\n            <Label htmlFor=\"hora\">Horário *</Label>\n            <Select \n              id=\"hora\" \n              name=\"hora\"\n              value={formData.hora || ''}\n              onChange={handleInputChange}\n              required\n              disabled={!dataAgendamento}\n            >\n              <option value=\"\">Selecione um horário</option>\n              {horarios.map(horario => (\n                <option key={horario} value={horario}>\n                  {horario}\n                </option>\n              ))}\n            </Select>\n          </FormGroup>\n          \n          <FormGroup>\n            <Label htmlFor=\"servico\">Serviço *</Label>\n            <Select \n              id=\"servico\" \n              name=\"servico\"\n              value={formData.servico}\n              onChange={handleInputChange}\n              required\n            >\n              <option value=\"\">Selecione um serviço</option>\n              {servicos.map(servico => (\n                <option key={servico} value={servico}>\n                  {servico}\n                </option>\n              ))}\n            </Select>\n          </FormGroup>\n          \n          <FormGroup style={{ gridColumn: '1 / -1' }}>\n            <Label htmlFor=\"observacoes\">Observações</Label>\n            <TextArea \n              id=\"observacoes\" \n              name=\"observacoes\"\n              value={formData.observacoes}\n              onChange={handleInputChange}\n              placeholder=\"Descreva qualquer informação adicional relevante para a consulta\"\n            />\n          </FormGroup>\n          \n          <ButtonGroup>\n            <Button type=\"button\" secondary onClick={() => navigate('/cliente-dashboard/agendamentos')}>\n              Cancelar\n            </Button>\n            <Button type=\"submit\" disabled={submitting}>\n              {submitting ? 'Agendando...' : 'Agendar Consulta'}\n            </Button>\n          </ButtonGroup>\n        </Form>\n      </ScheduleContainer>\n    </Container>\n  );\n}\n\nexport default ClienteNovoAgendamentoPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}