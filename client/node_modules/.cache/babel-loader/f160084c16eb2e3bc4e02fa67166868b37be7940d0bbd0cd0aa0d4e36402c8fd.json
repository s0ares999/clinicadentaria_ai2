{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\n\n// Detectar automaticamente o ambiente e configurar a URL base\nconst baseURL = process.env.REACT_APP_API_URL || (window.location.hostname === 'localhost' ? 'http://localhost:8000/api/' : '/api/');\nconst API_URL = `${baseURL}clientes/`;\nclass ClienteService {\n  async getClienteProfile() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!user || !user.token) {\n      throw new Error('User not authenticated');\n    }\n    return axios.get(API_URL + 'perfil', {\n      headers: authHeader()\n    });\n  }\n  async updateClienteProfile(clienteData) {\n    return axios.put(API_URL + 'perfil', clienteData, {\n      headers: authHeader()\n    });\n  }\n  async getAgendamentos() {\n    return axios.get(API_URL + 'agendamentos', {\n      headers: authHeader()\n    });\n  }\n  async cancelarAgendamento(id) {\n    return axios.put(API_URL + `agendamentos/${id}/cancelar`, {}, {\n      headers: authHeader()\n    });\n  }\n}\nexport default new ClienteService();","map":{"version":3,"names":["axios","authHeader","baseURL","process","env","REACT_APP_API_URL","window","location","hostname","API_URL","ClienteService","getClienteProfile","user","JSON","parse","localStorage","getItem","token","Error","get","headers","updateClienteProfile","clienteData","put","getAgendamentos","cancelarAgendamento","id"],"sources":["C:/Users/s0ares/clinicadentaria_ai2/client/src/services/cliente.service.js"],"sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\n// Detectar automaticamente o ambiente e configurar a URL base\r\nconst baseURL = process.env.REACT_APP_API_URL || \r\n               (window.location.hostname === 'localhost' ? \r\n                'http://localhost:8000/api/' : \r\n                '/api/');\r\n\r\nconst API_URL = `${baseURL}clientes/`;\r\n\r\nclass ClienteService {\r\n  async getClienteProfile() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (!user || !user.token) {\r\n      throw new Error('User not authenticated');\r\n    }\r\n    \r\n    return axios.get(API_URL + 'perfil', { \r\n      headers: authHeader() \r\n    });\r\n  }\r\n  \r\n  async updateClienteProfile(clienteData) {\r\n    return axios.put(API_URL + 'perfil', clienteData, { \r\n      headers: authHeader() \r\n    });\r\n  }\r\n  \r\n  async getAgendamentos() {\r\n    return axios.get(API_URL + 'agendamentos', { \r\n      headers: authHeader() \r\n    });\r\n  }\r\n  \r\n  async cancelarAgendamento(id) {\r\n    return axios.put(API_URL + `agendamentos/${id}/cancelar`, {}, { \r\n      headers: authHeader() \r\n    });\r\n  }\r\n}\r\n\r\nexport default new ClienteService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;;AAEtC;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,KAC7BC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,GACxC,4BAA4B,GAC5B,OAAO,CAAC;AAExB,MAAMC,OAAO,GAAG,GAAGP,OAAO,WAAW;AAErC,MAAMQ,cAAc,CAAC;EACnB,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAI,CAACJ,IAAI,IAAI,CAACA,IAAI,CAACK,KAAK,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,OAAOlB,KAAK,CAACmB,GAAG,CAACV,OAAO,GAAG,QAAQ,EAAE;MACnCW,OAAO,EAAEnB,UAAU,CAAC;IACtB,CAAC,CAAC;EACJ;EAEA,MAAMoB,oBAAoBA,CAACC,WAAW,EAAE;IACtC,OAAOtB,KAAK,CAACuB,GAAG,CAACd,OAAO,GAAG,QAAQ,EAAEa,WAAW,EAAE;MAChDF,OAAO,EAAEnB,UAAU,CAAC;IACtB,CAAC,CAAC;EACJ;EAEA,MAAMuB,eAAeA,CAAA,EAAG;IACtB,OAAOxB,KAAK,CAACmB,GAAG,CAACV,OAAO,GAAG,cAAc,EAAE;MACzCW,OAAO,EAAEnB,UAAU,CAAC;IACtB,CAAC,CAAC;EACJ;EAEA,MAAMwB,mBAAmBA,CAACC,EAAE,EAAE;IAC5B,OAAO1B,KAAK,CAACuB,GAAG,CAACd,OAAO,GAAG,gBAAgBiB,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE;MAC5DN,OAAO,EAAEnB,UAAU,CAAC;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIS,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}