{"ast":null,"code":"import api from './api.config';\n\n// Adicione a constante API_URL\nconst API_URL = process.env.REACT_APP_API_URL || (window.location.hostname === 'localhost' ? 'http://localhost:8000/api/' : '/api/');\nclass AuthService {\n  async login(email, password) {\n    try {\n      console.log(\"\\n=== INICIANDO LOGIN ===\");\n      console.log(\"üì§ Enviando requisi√ß√£o para:\", 'auth/signin');\n      console.log(\"Dados enviados:\", {\n        email,\n        passwordLength: (password === null || password === void 0 ? void 0 : password.length) || 0\n      });\n      const response = await api.post('auth/signin', {\n        email,\n        password\n      });\n      console.log(\"\\nüì• Resposta recebida:\");\n      console.log(\"Status:\", response.status);\n      console.log(\"Headers:\", response.headers);\n      console.log(\"Dados:\", {\n        ...response.data,\n        accessToken: response.data.accessToken ? '[PRESENTE]' : '[AUSENTE]'\n      });\n      if (!response.data.success || !response.data.accessToken) {\n        console.error(\"‚ùå Resposta inv√°lida:\", response.data);\n        throw new Error(response.data.message || 'Resposta inv√°lida do servidor');\n      }\n      const userData = {\n        ...response.data,\n        tipo: response.data.tipo || 'cliente',\n        accessToken: response.data.accessToken,\n        id: response.data.id\n      };\n      console.log(\"\\nüíæ Salvando dados do usu√°rio:\", {\n        ...userData,\n        accessToken: '[PRESENTE]'\n      });\n      localStorage.setItem('user', JSON.stringify(userData));\n      return userData;\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response3$data;\n      console.error(\"\\n‚ùå Erro no login:\");\n      console.error(\"Status:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status);\n      console.error(\"Dados do erro:\", (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      console.error(\"Mensagem:\", error.message);\n      console.error(\"Stack:\", error.stack);\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message || 'Erro ao realizar login');\n    }\n  }\n  logout() {\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  async register(email, senha, nome, telefone, role, dadosEspecificos = {}) {\n    try {\n      console.log(`Tentando registro em ${API_URL}auth/signup`);\n      console.log(\"Dados a enviar:\", {\n        nome,\n        email,\n        senha,\n        telefone,\n        tipo: role,\n        ...dadosEspecificos\n      });\n\n      // Adicionar timeout maior para depura√ß√£o\n      const config = {\n        timeout: 10000 // 10 segundos\n      };\n\n      // Preparar os dados de acordo com o modelo do backend\n      const userData = {\n        nome,\n        email,\n        senha,\n        telefone,\n        tipo: role,\n        ...dadosEspecificos // Inclui todos os dados espec√≠ficos (data_nascimento, morada, nif, etc.)\n      };\n      console.log(\"Dados completos a enviar:\", userData);\n      return await api.post('auth/signup', userData, config);\n    } catch (error) {\n      console.error(\"Service: erro no registro\", error);\n\n      // Mais informa√ß√µes de diagn√≥stico\n      if (error.code === 'ERR_NETWORK') {\n        console.error(\"Detalhes do erro de rede:\", {\n          message: error.message,\n          url: API_URL + 'signup',\n          serverStatus: \"N√£o respondendo ou inacess√≠vel\"\n        });\n      }\n      throw error;\n    }\n  }\n  getCurrentUser() {\n    try {\n      const userStr = localStorage.getItem('user');\n      if (!userStr) return null;\n      const user = JSON.parse(userStr);\n      if (!user.accessToken) return null;\n\n      // Verificar se o token est√° expirado\n      const tokenInfo = this.decodeToken(user.accessToken);\n      if (tokenInfo.exp && tokenInfo.exp * 1000 < Date.now()) {\n        this.logout();\n        return null;\n      }\n      return user;\n    } catch (error) {\n      console.error('Erro ao recuperar usu√°rio:', error);\n      return null;\n    }\n  }\n\n  // Verificar se o token ainda √© v√°lido (isso poderia ser expandido para incluir verifica√ß√£o de expira√ß√£o)\n  isAuthenticated() {\n    const user = this.getCurrentUser();\n    return !!user && !!user.accessToken;\n  }\n\n  // Verificar se o usu√°rio √© admin\n  isAdmin() {\n    const user = this.getCurrentUser();\n    return !!user && user.roles && user.roles.includes('ROLE_ADMIN');\n  }\n  hasRole(requiredRole) {\n    const user = this.getCurrentUser();\n    if (!user || !user.user || !user.user.tipoUtilizador) return false;\n    return user.user.tipoUtilizador.nome === requiredRole;\n  }\n  getToken() {\n    const user = this.getCurrentUser();\n    return user === null || user === void 0 ? void 0 : user.accessToken;\n  }\n  async refreshToken() {\n    const user = this.getCurrentUser();\n    if (!(user !== null && user !== void 0 && user.refreshToken)) return null;\n    try {\n      const response = await api.post('auth/refresh-token', {\n        refreshToken: user.refreshToken\n      });\n      if (response.data.accessToken) {\n        const updatedUser = {\n          ...user,\n          accessToken: response.data.accessToken\n        };\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        return updatedUser;\n      }\n      return null;\n    } catch (error) {\n      console.error('Erro ao renovar token:', error);\n      return null;\n    }\n  }\n  decodeToken(token) {\n    try {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      console.error('Erro ao decodificar token:', error);\n      return {};\n    }\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["api","API_URL","process","env","REACT_APP_API_URL","window","location","hostname","AuthService","login","email","password","console","log","passwordLength","length","response","post","status","headers","data","accessToken","success","error","Error","message","userData","tipo","id","localStorage","setItem","JSON","stringify","_error$response","_error$response2","_error$response3","_error$response3$data","stack","logout","removeItem","href","register","senha","nome","telefone","role","dadosEspecificos","config","timeout","code","url","serverStatus","getCurrentUser","userStr","getItem","user","parse","tokenInfo","decodeToken","exp","Date","now","isAuthenticated","isAdmin","roles","includes","hasRole","requiredRole","tipoUtilizador","getToken","refreshToken","updatedUser","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join"],"sources":["C:/Users/s0ares/clinicadentaria_ai2/client/src/services/auth.service.js"],"sourcesContent":["import api from './api.config';\n\n// Adicione a constante API_URL\nconst API_URL = process.env.REACT_APP_API_URL || \n  (window.location.hostname === 'localhost' ? 'http://localhost:8000/api/' : '/api/');\n\nclass AuthService {\n  async login(email, password) {\n    try {\n      console.log(\"\\n=== INICIANDO LOGIN ===\");\n      console.log(\"üì§ Enviando requisi√ß√£o para:\", 'auth/signin');\n      console.log(\"Dados enviados:\", { \n        email, \n        passwordLength: password?.length || 0 \n      });\n      \n      const response = await api.post('auth/signin', { \n        email, \n        password\n      });\n\n      console.log(\"\\nüì• Resposta recebida:\");\n      console.log(\"Status:\", response.status);\n      console.log(\"Headers:\", response.headers);\n      console.log(\"Dados:\", {\n        ...response.data,\n        accessToken: response.data.accessToken ? '[PRESENTE]' : '[AUSENTE]'\n      });\n\n      if (!response.data.success || !response.data.accessToken) {\n        console.error(\"‚ùå Resposta inv√°lida:\", response.data);\n        throw new Error(response.data.message || 'Resposta inv√°lida do servidor');\n      }\n\n      const userData = {\n        ...response.data,\n        tipo: response.data.tipo || 'cliente',\n        accessToken: response.data.accessToken,\n        id: response.data.id\n      };\n\n      console.log(\"\\nüíæ Salvando dados do usu√°rio:\", {\n        ...userData,\n        accessToken: '[PRESENTE]'\n      });\n\n      localStorage.setItem('user', JSON.stringify(userData));\n      return userData;\n      \n    } catch (error) {\n      console.error(\"\\n‚ùå Erro no login:\");\n      console.error(\"Status:\", error.response?.status);\n      console.error(\"Dados do erro:\", error.response?.data);\n      console.error(\"Mensagem:\", error.message);\n      console.error(\"Stack:\", error.stack);\n\n      throw new Error(\n        error.response?.data?.message || \n        error.message || \n        'Erro ao realizar login'\n      );\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n\n  async register(email, senha, nome, telefone, role, dadosEspecificos = {}) {\n    try {\n      console.log(`Tentando registro em ${API_URL}auth/signup`);\n      console.log(\"Dados a enviar:\", {\n        nome, email, senha, telefone, tipo: role, ...dadosEspecificos\n      });\n      \n      // Adicionar timeout maior para depura√ß√£o\n      const config = {\n        timeout: 10000 // 10 segundos\n      };\n      \n      // Preparar os dados de acordo com o modelo do backend\n      const userData = {\n        nome,\n        email,\n        senha,\n        telefone,\n        tipo: role,\n        ...dadosEspecificos // Inclui todos os dados espec√≠ficos (data_nascimento, morada, nif, etc.)\n      };\n      \n      console.log(\"Dados completos a enviar:\", userData);\n      \n      return await api.post('auth/signup', userData, config);\n    } catch (error) {\n      console.error(\"Service: erro no registro\", error);\n      \n      // Mais informa√ß√µes de diagn√≥stico\n      if (error.code === 'ERR_NETWORK') {\n        console.error(\"Detalhes do erro de rede:\", {\n          message: error.message,\n          url: API_URL + 'signup',\n          serverStatus: \"N√£o respondendo ou inacess√≠vel\"\n        });\n      }\n      \n      throw error;\n    }\n  }\n\n  getCurrentUser() {\n    try {\n      const userStr = localStorage.getItem('user');\n      if (!userStr) return null;\n      \n      const user = JSON.parse(userStr);\n      if (!user.accessToken) return null;\n\n      // Verificar se o token est√° expirado\n      const tokenInfo = this.decodeToken(user.accessToken);\n      if (tokenInfo.exp && tokenInfo.exp * 1000 < Date.now()) {\n        this.logout();\n        return null;\n      }\n\n      return user;\n    } catch (error) {\n      console.error('Erro ao recuperar usu√°rio:', error);\n      return null;\n    }\n  }\n\n  // Verificar se o token ainda √© v√°lido (isso poderia ser expandido para incluir verifica√ß√£o de expira√ß√£o)\n  isAuthenticated() {\n    const user = this.getCurrentUser();\n    return !!user && !!user.accessToken;\n  }\n\n  // Verificar se o usu√°rio √© admin\n  isAdmin() {\n    const user = this.getCurrentUser();\n    return !!user && user.roles && user.roles.includes('ROLE_ADMIN');\n  }\n\n  hasRole(requiredRole) {\n    const user = this.getCurrentUser();\n    if (!user || !user.user || !user.user.tipoUtilizador) return false;\n    return user.user.tipoUtilizador.nome === requiredRole;\n  }\n\n  getToken() {\n    const user = this.getCurrentUser();\n    return user?.accessToken;\n  }\n\n  async refreshToken() {\n    const user = this.getCurrentUser();\n    if (!user?.refreshToken) return null;\n\n    try {\n      const response = await api.post('auth/refresh-token', {\n        refreshToken: user.refreshToken\n      });\n\n      if (response.data.accessToken) {\n        const updatedUser = {\n          ...user,\n          accessToken: response.data.accessToken\n        };\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        return updatedUser;\n      }\n      return null;\n    } catch (error) {\n      console.error('Erro ao renovar token:', error);\n      return null;\n    }\n  }\n\n  decodeToken(token) {\n    try {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      console.error('Erro ao decodificar token:', error);\n      return {};\n    }\n  }\n}\n\nexport default new AuthService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}