{"ast":null,"code":"import axios from 'axios';\nimport AuthService from './auth.service';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nclass ClienteService {\n  constructor() {\n    this.setAuthHeader();\n  }\n\n  // Atualiza o cabeçalho de autenticação - necessário quando o token muda\n  setAuthHeader() {\n    const user = AuthService.getCurrentUser();\n    this.authHeader = user !== null && user !== void 0 && user.accessToken ? {\n      Authorization: `Bearer ${user.accessToken}`\n    } : {};\n  }\n\n  // Obter perfil do cliente atual (usuário logado)\n  async getClienteProfile() {\n    this.setAuthHeader(); // Garante que o token está atualizado\n    console.log(\"Obtendo perfil do cliente, URL:\", `${API_URL}/cliente/perfil`);\n    console.log(\"Token:\", this.authHeader);\n    try {\n      const response = await axios.get(`${API_URL}/cliente/perfil`, {\n        headers: this.authHeader\n      });\n      console.log(\"Resposta completa do perfil do cliente:\", response);\n      return response;\n    } catch (error) {\n      var _error$response;\n      console.error(\"Erro ao obter perfil:\", error);\n      console.error(\"Detalhes da resposta de erro:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      throw error;\n    }\n  }\n\n  // Atualizar perfil do cliente\n  async updateClienteProfile(clienteData) {\n    this.setAuthHeader(); // Garante que o token está atualizado\n    console.log(\"Atualizando perfil, dados:\", clienteData);\n    return axios.put(`${API_URL}/cliente/perfil`, clienteData, {\n      headers: this.authHeader\n    });\n  }\n\n  // Obter histórico de consultas do cliente\n  async getConsultas() {\n    this.setAuthHeader(); // Garante que o token está atualizado\n    return axios.get(`${API_URL}/cliente/consultas`, {\n      headers: this.authHeader\n    });\n  }\n}\nexport default new ClienteService();","map":{"version":3,"names":["axios","AuthService","API_URL","process","env","REACT_APP_API_URL","ClienteService","constructor","setAuthHeader","user","getCurrentUser","authHeader","accessToken","Authorization","getClienteProfile","console","log","response","get","headers","error","_error$response","data","updateClienteProfile","clienteData","put","getConsultas"],"sources":["C:/Users/s0ares/clinicadentaria_ai2/client/src/services/cliente.service.js"],"sourcesContent":["import axios from 'axios';\r\nimport AuthService from './auth.service';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nclass ClienteService {\r\n  constructor() {\r\n    this.setAuthHeader();\r\n  }\r\n  \r\n  // Atualiza o cabeçalho de autenticação - necessário quando o token muda\r\n  setAuthHeader() {\r\n    const user = AuthService.getCurrentUser();\r\n    this.authHeader = user?.accessToken \r\n      ? { Authorization: `Bearer ${user.accessToken}` } \r\n      : {};\r\n  }\r\n\r\n  // Obter perfil do cliente atual (usuário logado)\r\n  async getClienteProfile() {\r\n    this.setAuthHeader(); // Garante que o token está atualizado\r\n    console.log(\"Obtendo perfil do cliente, URL:\", `${API_URL}/cliente/perfil`);\r\n    console.log(\"Token:\", this.authHeader);\r\n    \r\n    try {\r\n      const response = await axios.get(`${API_URL}/cliente/perfil`, {\r\n        headers: this.authHeader\r\n      });\r\n      console.log(\"Resposta completa do perfil do cliente:\", response);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(\"Erro ao obter perfil:\", error);\r\n      console.error(\"Detalhes da resposta de erro:\", error.response?.data);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Atualizar perfil do cliente\r\n  async updateClienteProfile(clienteData) {\r\n    this.setAuthHeader(); // Garante que o token está atualizado\r\n    console.log(\"Atualizando perfil, dados:\", clienteData);\r\n    return axios.put(`${API_URL}/cliente/perfil`, clienteData, {\r\n      headers: this.authHeader\r\n    });\r\n  }\r\n\r\n  // Obter histórico de consultas do cliente\r\n  async getConsultas() {\r\n    this.setAuthHeader(); // Garante que o token está atualizado\r\n    return axios.get(`${API_URL}/cliente/consultas`, {\r\n      headers: this.authHeader\r\n    });\r\n  }\r\n}\r\n\r\nexport default new ClienteService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,gBAAgB;AAExC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,cAAc,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB;;EAEA;EACAA,aAAaA,CAAA,EAAG;IACd,MAAMC,IAAI,GAAGR,WAAW,CAACS,cAAc,CAAC,CAAC;IACzC,IAAI,CAACC,UAAU,GAAGF,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEG,WAAW,GAC/B;MAAEC,aAAa,EAAE,UAAUJ,IAAI,CAACG,WAAW;IAAG,CAAC,GAC/C,CAAC,CAAC;EACR;;EAEA;EACA,MAAME,iBAAiBA,CAAA,EAAG;IACxB,IAAI,CAACN,aAAa,CAAC,CAAC,CAAC,CAAC;IACtBO,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE,GAAGd,OAAO,iBAAiB,CAAC;IAC3Ea,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACL,UAAU,CAAC;IAEtC,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,GAAGhB,OAAO,iBAAiB,EAAE;QAC5DiB,OAAO,EAAE,IAAI,CAACR;MAChB,CAAC,CAAC;MACFI,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEC,QAAQ,CAAC;MAChE,OAAOA,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdN,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CL,OAAO,CAACK,KAAK,CAAC,+BAA+B,GAAAC,eAAA,GAAED,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBC,IAAI,CAAC;MACpE,MAAMF,KAAK;IACb;EACF;;EAEA;EACA,MAAMG,oBAAoBA,CAACC,WAAW,EAAE;IACtC,IAAI,CAAChB,aAAa,CAAC,CAAC,CAAC,CAAC;IACtBO,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEQ,WAAW,CAAC;IACtD,OAAOxB,KAAK,CAACyB,GAAG,CAAC,GAAGvB,OAAO,iBAAiB,EAAEsB,WAAW,EAAE;MACzDL,OAAO,EAAE,IAAI,CAACR;IAChB,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMe,YAAYA,CAAA,EAAG;IACnB,IAAI,CAAClB,aAAa,CAAC,CAAC,CAAC,CAAC;IACtB,OAAOR,KAAK,CAACkB,GAAG,CAAC,GAAGhB,OAAO,oBAAoB,EAAE;MAC/CiB,OAAO,EAAE,IAAI,CAACR;IAChB,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIL,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}